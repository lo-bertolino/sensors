

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Jun 13 14:26:53 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.42
    18                           ; Generated 13/04/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	nvCOMRAM
    53  000012                     __pnvCOMRAM:
    54                           	opt stack 0
    55  000012                     _time_out:
    56                           	opt stack 0
    57  000012                     	ds	1
    58  0000                     _TRISCbits	set	3988
    59  0000                     _PORTCbits	set	3970
    60  0000                     _PORTB	set	3969
    61  0000                     _ADCON1	set	4033
    62  0000                     _ADCON0	set	4034
    63  0000                     _TRISC	set	3988
    64  0000                     _TRISB	set	3987
    65  0000                     _TRISA	set	3986
    66                           
    67                           ; #config settings
    68  0000                     
    69                           	psect	cinit
    70  007E20                     __pcinit:
    71                           	opt stack 0
    72  007E20                     start_initialization:
    73                           	opt stack 0
    74  007E20                     __initialization:
    75                           	opt stack 0
    76                           
    77                           ; Clear objects allocated to COMRAM (3 bytes)
    78  007E20  6A11               	clrf	(__pbssCOMRAM+2)& (0+255),c
    79  007E22  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
    80  007E24  6A0F               	clrf	__pbssCOMRAM& (0+255),c
    81  007E26                     end_of_initialization:
    82                           	opt stack 0
    83  007E26                     __end_of__initialization:
    84                           	opt stack 0
    85  007E26  0100               	movlb	0
    86  007E28  EF42  F03F         	goto	_main	;jump to C main() function
    87                           
    88                           	psect	bssCOMRAM
    89  00000F                     __pbssCOMRAM:
    90                           	opt stack 0
    91  00000F                     _temp:
    92                           	opt stack 0
    93  00000F                     	ds	1
    94  000010                     _res:
    95                           	opt stack 0
    96  000010                     	ds	1
    97  000011                     _humid:
    98                           	opt stack 0
    99  000011                     	ds	1
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	opt stack 0
   104  000001                     ??_readDHT:
   105  000001                     ??_beginDHT:
   106  000001                     
   107                           ; 2 bytes @ 0x0
   108  000001                     	ds	2
   109  000003                     readDHT@dat:
   110                           	opt stack 0
   111                           
   112                           ; 1 bytes @ 0x2
   113  000003                     	ds	1
   114  000004                     readDHT@k:
   115                           	opt stack 0
   116                           
   117                           ; 1 bytes @ 0x3
   118  000004                     	ds	1
   119  000005                     readDHT@i:
   120                           	opt stack 0
   121                           
   122                           ; 1 bytes @ 0x4
   123  000005                     	ds	1
   124  000006                     ??_DHTHandler:
   125                           
   126                           ; 1 bytes @ 0x5
   127  000006                     	ds	2
   128  000008                     DHTHandler@checkSum:
   129                           	opt stack 0
   130                           
   131                           ; 1 bytes @ 0x7
   132  000008                     	ds	1
   133  000009                     DHTHandler@t_byte1:
   134                           	opt stack 0
   135                           
   136                           ; 1 bytes @ 0x8
   137  000009                     	ds	1
   138  00000A                     DHTHandler@t_byte2:
   139                           	opt stack 0
   140                           
   141                           ; 1 bytes @ 0x9
   142  00000A                     	ds	1
   143  00000B                     DHTHandler@rh_byte1:
   144                           	opt stack 0
   145                           
   146                           ; 1 bytes @ 0xA
   147  00000B                     	ds	1
   148  00000C                     DHTHandler@rh_byte2:
   149                           	opt stack 0
   150                           
   151                           ; 1 bytes @ 0xB
   152  00000C                     	ds	1
   153  00000D                     ??_main:
   154                           
   155                           ; 1 bytes @ 0xC
   156  00000D                     	ds	2
   157                           
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 41 in file "main.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  2   35[None  ] int 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   177 ;;      Params:         0       0       0       0       0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0       0       0
   179 ;;      Temps:          2       0       0       0       0       0       0       0       0
   180 ;;      Totals:         2       0       0       0       0       0       0       0       0
   181 ;;Total ram usage:        2 bytes
   182 ;; Hardware stack levels required when called:    2
   183 ;; This function calls:
   184 ;;		_DHTHandler
   185 ;;		_Init
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text0
   192  007E84                     __ptext0:
   193                           	opt stack 0
   194  007E84                     _main:
   195                           	opt stack 29
   196                           
   197                           ;main.c: 42: Init();
   198                           
   199                           ;incstack = 0
   200  007E84  EC16  F03F         	call	_Init	;wreg free
   201  007E88                     l812:
   202                           
   203                           ;main.c: 45: DHTHandler();
   204  007E88  EC6C  F03F         	call	_DHTHandler	;wreg free
   205                           
   206                           ;main.c: 46: if(res=='s') PORTB = temp;
   207  007E8C  0E73               	movlw	115
   208  007E8E  1810               	xorwf	_res,w,c
   209  007E90  A4D8               	btfss	status,2,c
   210  007E92  D003               	goto	l818
   211  007E94  C00F  FF81         	movff	_temp,3969	;volatile
   212  007E98  D012               	goto	l830
   213  007E9A                     l818:
   214                           
   215                           ;main.c: 47: else if(res=='r') PORTB = 0xf1;
   216  007E9A  0E72               	movlw	114
   217  007E9C  1810               	xorwf	_res,w,c
   218  007E9E  A4D8               	btfss	status,2,c
   219  007EA0  D002               	goto	l822
   220  007EA2  0EF1               	movlw	241
   221  007EA4  D00B               	goto	L2
   222  007EA6                     l822:
   223                           
   224                           ;main.c: 48: else if(res=='t') PORTB = 0xf2;
   225  007EA6  0E74               	movlw	116
   226  007EA8  1810               	xorwf	_res,w,c
   227  007EAA  A4D8               	btfss	status,2,c
   228  007EAC  D002               	goto	l826
   229  007EAE  0EF2               	movlw	242
   230  007EB0  D005               	goto	L2
   231  007EB2                     l826:
   232                           
   233                           ;main.c: 49: else if(res=='c') PORTB = 0xf3;
   234  007EB2  0E63               	movlw	99
   235  007EB4  1810               	xorwf	_res,w,c
   236  007EB6  A4D8               	btfss	status,2,c
   237  007EB8  D002               	goto	l830
   238  007EBA  0EF3               	movlw	243
   239  007EBC                     L2:
   240  007EBC  6E81               	movwf	3969,c	;volatile
   241  007EBE                     l830:
   242                           
   243                           ;main.c: 51: _delay((unsigned long)((2000)*(16000000/4000.0)));
   244  007EBE  0E29               	movlw	41
   245  007EC0  6E0E               	movwf	(??_main+1)& (0+255),c
   246  007EC2  0E96               	movlw	150
   247  007EC4  6E0D               	movwf	??_main& (0+255),c
   248  007EC6  0E7F               	movlw	127
   249  007EC8                     u217:
   250  007EC8  2EE8               	decfsz	wreg,f,c
   251  007ECA  D7FE               	bra	u217
   252  007ECC  2E0D               	decfsz	??_main& (0+255),f,c
   253  007ECE  D7FC               	bra	u217
   254  007ED0  2E0E               	decfsz	(??_main+1)& (0+255),f,c
   255  007ED2  D7FA               	bra	u217
   256  007ED4  F000               	nop	
   257  007ED6  D7D8               	goto	l812
   258  007ED8                     __end_of_main:
   259                           	opt stack 0
   260                           wreg	equ	0xFE8
   261                           status	equ	0xFD8
   262                           
   263 ;; *************** function _Init *****************
   264 ;; Defined at:
   265 ;;		line 29 in file "main.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   279 ;;      Params:         0       0       0       0       0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0       0       0       0       0
   282 ;;      Totals:         0       0       0       0       0       0       0       0       0
   283 ;;Total ram usage:        0 bytes
   284 ;; Hardware stack levels used:    1
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		_main
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text1
   293  007E2C                     __ptext1:
   294                           	opt stack 0
   295  007E2C                     _Init:
   296                           	opt stack 30
   297                           
   298                           ;main.c: 31: TRISA=0b11111111;
   299                           
   300                           ;incstack = 0
   301  007E2C  6892               	setf	3986,c	;volatile
   302                           
   303                           ;main.c: 32: TRISB=0;
   304  007E2E  0E00               	movlw	0
   305  007E30  6E93               	movwf	3987,c	;volatile
   306                           
   307                           ;main.c: 33: TRISC=0;
   308  007E32  0E00               	movlw	0
   309  007E34  6E94               	movwf	3988,c	;volatile
   310                           
   311                           ;main.c: 36: ADCON0=0b10000001;
   312  007E36  0E81               	movlw	129
   313  007E38  6EC2               	movwf	4034,c	;volatile
   314                           
   315                           ;main.c: 38: ADCON1=0b00001110;
   316  007E3A  0E0E               	movlw	14
   317  007E3C  6EC1               	movwf	4033,c	;volatile
   318  007E3E  0012               	return		;funcret
   319  007E40                     __end_of_Init:
   320                           	opt stack 0
   321                           wreg	equ	0xFE8
   322                           status	equ	0xFD8
   323                           
   324 ;; *************** function _DHTHandler *****************
   325 ;; Defined at:
   326 ;;		line 110 in file "main.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;  rh_byte2        1   11[COMRAM] unsigned char 
   331 ;;  rh_byte1        1   10[COMRAM] unsigned char 
   332 ;;  t_byte2         1    9[COMRAM] unsigned char 
   333 ;;  t_byte1         1    8[COMRAM] unsigned char 
   334 ;;  checkSum        1    7[COMRAM] unsigned char 
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   344 ;;      Params:         0       0       0       0       0       0       0       0       0
   345 ;;      Locals:         5       0       0       0       0       0       0       0       0
   346 ;;      Temps:          2       0       0       0       0       0       0       0       0
   347 ;;      Totals:         7       0       0       0       0       0       0       0       0
   348 ;;Total ram usage:        7 bytes
   349 ;; Hardware stack levels used:    1
   350 ;; Hardware stack levels required when called:    1
   351 ;; This function calls:
   352 ;;		_beginDHT
   353 ;;		_readDHT
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text2
   360  007ED8                     __ptext2:
   361                           	opt stack 0
   362  007ED8                     _DHTHandler:
   363                           	opt stack 29
   364                           
   365                           ;main.c: 111: unsigned char t_byte1, t_byte2, rh_byte1, rh_byte2, checkSum;
   366                           ;main.c: 112: time_out = 1;
   367                           
   368                           ;incstack = 0
   369  007ED8  0E01               	movlw	1
   370  007EDA  6E12               	movwf	_time_out,c
   371                           
   372                           ;main.c: 113: if(!beginDHT())
   373  007EDC  EC20  F03F         	call	_beginDHT	;wreg free
   374  007EE0  0900               	iorlw	0
   375  007EE2  A4D8               	btfss	status,2,c
   376  007EE4  D002               	goto	l778
   377                           
   378                           ;main.c: 114: res = 'r';
   379  007EE6  0E72               	movlw	114
   380  007EE8  6E10               	movwf	_res,c
   381  007EEA                     l778:
   382                           
   383                           ;main.c: 115: rh_byte1 = readDHT();
   384  007EEA  ECAF  F03F         	call	_readDHT	;wreg free
   385  007EEE  6E0B               	movwf	DHTHandler@rh_byte1,c
   386                           
   387                           ;main.c: 116: rh_byte2 = readDHT();
   388  007EF0  ECAF  F03F         	call	_readDHT	;wreg free
   389  007EF4  6E0C               	movwf	DHTHandler@rh_byte2,c
   390                           
   391                           ;main.c: 117: t_byte1 = readDHT();
   392  007EF6  ECAF  F03F         	call	_readDHT	;wreg free
   393  007EFA  6E09               	movwf	DHTHandler@t_byte1,c
   394                           
   395                           ;main.c: 118: t_byte2 = readDHT();
   396  007EFC  ECAF  F03F         	call	_readDHT	;wreg free
   397  007F00  6E0A               	movwf	DHTHandler@t_byte2,c
   398                           
   399                           ;main.c: 119: checkSum = readDHT();
   400  007F02  ECAF  F03F         	call	_readDHT	;wreg free
   401  007F06  6E08               	movwf	DHTHandler@checkSum,c
   402                           
   403                           ;main.c: 120: if(time_out)
   404  007F08  5012               	movf	_time_out,w,c
   405  007F0A  B4D8               	btfsc	status,2,c
   406  007F0C  D002               	goto	l792
   407                           
   408                           ;main.c: 121: res = 't';
   409  007F0E  0E74               	movlw	116
   410  007F10  6E10               	movwf	_res,c
   411  007F12                     l792:
   412                           
   413                           ;main.c: 122: if(checkSum!=((rh_byte1+rh_byte2+t_byte1+t_byte2) & 0xFF))
   414  007F12  500C               	movf	DHTHandler@rh_byte2,w,c
   415  007F14  C00B  F006         	movff	DHTHandler@rh_byte1,??_DHTHandler
   416  007F18  6A07               	clrf	(??_DHTHandler+1)& (0+255),c
   417  007F1A  2606               	addwf	??_DHTHandler,f,c
   418  007F1C  0E00               	movlw	0
   419  007F1E  2207               	addwfc	??_DHTHandler+1,f,c
   420  007F20  5009               	movf	DHTHandler@t_byte1,w,c
   421  007F22  2606               	addwf	??_DHTHandler,f,c
   422  007F24  0E00               	movlw	0
   423  007F26  2207               	addwfc	??_DHTHandler+1,f,c
   424  007F28  500A               	movf	DHTHandler@t_byte2,w,c
   425  007F2A  2606               	addwf	??_DHTHandler,f,c
   426  007F2C  0E00               	movlw	0
   427  007F2E  2207               	addwfc	??_DHTHandler+1,f,c
   428  007F30  5006               	movf	??_DHTHandler,w,c
   429  007F32  1808               	xorwf	DHTHandler@checkSum,w,c
   430  007F34  B4D8               	btfsc	status,2,c
   431  007F36  D002               	goto	l796
   432                           
   433                           ;main.c: 123: res = 'c';
   434  007F38  0E63               	movlw	99
   435  007F3A  6E10               	movwf	_res,c
   436  007F3C                     l796:
   437                           
   438                           ;main.c: 124: humid = rh_byte1;
   439  007F3C  C00B  F011         	movff	DHTHandler@rh_byte1,_humid
   440                           
   441                           ;main.c: 125: humid = (humid<<8)|rh_byte2;
   442  007F40  C00C  F011         	movff	DHTHandler@rh_byte2,_humid
   443                           
   444                           ;main.c: 126: temp = t_byte1;
   445  007F44  C009  F00F         	movff	DHTHandler@t_byte1,_temp
   446                           
   447                           ;main.c: 127: temp = (temp<<8)|t_byte2;
   448  007F48  C00A  F00F         	movff	DHTHandler@t_byte2,_temp
   449                           
   450                           ;main.c: 128: if(temp>0X80)
   451  007F4C  0E80               	movlw	128
   452  007F4E  640F               	cpfsgt	_temp,c
   453  007F50  D003               	goto	l808
   454                           
   455                           ;main.c: 129: temp -= temp&0X7F;
   456  007F52  500F               	movf	_temp,w,c
   457  007F54  0B7F               	andlw	127
   458  007F56  5E0F               	subwf	_temp,f,c
   459  007F58                     l808:
   460                           
   461                           ;main.c: 130: res = 's';
   462  007F58  0E73               	movlw	115
   463  007F5A  6E10               	movwf	_res,c
   464  007F5C  0012               	return		;funcret
   465  007F5E                     __end_of_DHTHandler:
   466                           	opt stack 0
   467                           wreg	equ	0xFE8
   468                           status	equ	0xFD8
   469                           
   470 ;; *************** function _readDHT *****************
   471 ;; Defined at:
   472 ;;		line 62 in file "main.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  i               1    4[COMRAM] unsigned char 
   477 ;;  k               1    3[COMRAM] unsigned char 
   478 ;;  dat             1    2[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      unsigned char 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   488 ;;      Params:         0       0       0       0       0       0       0       0       0
   489 ;;      Locals:         3       0       0       0       0       0       0       0       0
   490 ;;      Temps:          2       0       0       0       0       0       0       0       0
   491 ;;      Totals:         5       0       0       0       0       0       0       0       0
   492 ;;Total ram usage:        5 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_DHTHandler
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text3
   502  007F5E                     __ptext3:
   503                           	opt stack 0
   504  007F5E                     _readDHT:
   505                           	opt stack 29
   506                           
   507                           ;main.c: 63: unsigned char i, k, dat = 0;
   508                           
   509                           ;incstack = 0
   510  007F5E  0E00               	movlw	0
   511  007F60  6E03               	movwf	readDHT@dat,c
   512                           
   513                           ;main.c: 64: if(!time_out) return 0;
   514  007F62  5012               	movf	_time_out,w,c
   515  007F64  A4D8               	btfss	status,2,c
   516  007F66  D002               	goto	l702
   517  007F68  0E00               	movlw	0
   518  007F6A  0012               	return	
   519  007F6C                     l702:
   520                           
   521                           ;main.c: 65: for(i = 0; i<8; i++){
   522  007F6C  0E00               	movlw	0
   523  007F6E  6E05               	movwf	readDHT@i,c
   524  007F70                     l704:
   525  007F70  0E07               	movlw	7
   526  007F72  6405               	cpfsgt	readDHT@i,c
   527  007F74  D001               	goto	l708
   528  007F76  D042               	goto	l742
   529  007F78                     l708:
   530                           
   531                           ;main.c: 66: k = 0;
   532  007F78  0E00               	movlw	0
   533  007F7A  6E04               	movwf	readDHT@k,c
   534                           
   535                           ;main.c: 67: while(!PORTCbits.RC0){
   536  007F7C  D00A               	goto	l53
   537  007F7E                     l710:
   538                           
   539                           ;main.c: 68: k++;
   540  007F7E  2A04               	incf	readDHT@k,f,c
   541                           
   542                           ;main.c: 69: if(k>100){
   543  007F80  0E64               	movlw	100
   544  007F82  6404               	cpfsgt	readDHT@k,c
   545  007F84  D004               	goto	l55
   546                           
   547                           ;main.c: 70: time_out = 0;
   548  007F86  0E00               	movlw	0
   549  007F88  6E12               	movwf	_time_out,c
   550                           
   551                           ;main.c: 71: return 0;
   552  007F8A  0E00               	movlw	0
   553  007F8C  0012               	return	
   554  007F8E                     l55:
   555                           
   556                           ;main.c: 72: }
   557                           ;main.c: 73: _delay((unsigned long)((1)*(16000000/4000000.0)));
   558  007F8E  D000               	nop2		;2 cycle nop
   559  007F90  D000               	nop2		;2 cycle nop
   560  007F92                     l53:
   561  007F92  A082               	btfss	3970,0,c	;volatile
   562  007F94  D7F4               	goto	l710
   563                           
   564                           ;main.c: 74: }
   565                           ;main.c: 75: _delay((unsigned long)((30)*(16000000/4000000.0)));
   566  007F96  0E28               	movlw	40
   567  007F98                     u227:
   568  007F98  2EE8               	decfsz	wreg,f,c
   569  007F9A  D7FE               	bra	u227
   570                           
   571                           ;main.c: 76: if(!PORTCbits.RC0) dat &= 0<<(7-i);
   572  007F9C  B082               	btfsc	3970,0,c	;volatile
   573  007F9E  D010               	goto	l726
   574  007FA0  5005               	movf	readDHT@i,w,c
   575  007FA2  0800               	sublw	0
   576  007FA4  6E01               	movwf	??_readDHT& (0+255),c
   577  007FA6  0E07               	movlw	7
   578  007FA8  2601               	addwf	??_readDHT,f,c
   579  007FAA  0E00               	movlw	0
   580  007FAC  6E02               	movwf	(??_readDHT+1)& (0+255),c
   581  007FAE  2A01               	incf	??_readDHT,f,c
   582  007FB0  D002               	goto	u64
   583  007FB2                     u65:
   584  007FB2  90D8               	bcf	status,0,c
   585  007FB4  3602               	rlcf	??_readDHT+1,f,c
   586  007FB6                     u64:
   587  007FB6  2E01               	decfsz	??_readDHT,f,c
   588  007FB8  D7FC               	goto	u65
   589  007FBA  5002               	movf	??_readDHT+1,w,c
   590  007FBC  1603               	andwf	readDHT@dat,f,c
   591  007FBE  D01C               	goto	l738
   592  007FC0                     l726:
   593                           
   594                           ;main.c: 77: else{
   595                           ;main.c: 78: dat |= 1<<(7-i);
   596  007FC0  5005               	movf	readDHT@i,w,c
   597  007FC2  0800               	sublw	0
   598  007FC4  6E01               	movwf	??_readDHT& (0+255),c
   599  007FC6  0E07               	movlw	7
   600  007FC8  2601               	addwf	??_readDHT,f,c
   601  007FCA  0E01               	movlw	1
   602  007FCC  6E02               	movwf	(??_readDHT+1)& (0+255),c
   603  007FCE  2A01               	incf	??_readDHT,f,c
   604  007FD0  D002               	goto	u74
   605  007FD2                     u75:
   606  007FD2  90D8               	bcf	status,0,c
   607  007FD4  3602               	rlcf	??_readDHT+1,f,c
   608  007FD6                     u74:
   609  007FD6  2E01               	decfsz	??_readDHT,f,c
   610  007FD8  D7FC               	goto	u75
   611  007FDA  5002               	movf	??_readDHT+1,w,c
   612  007FDC  1203               	iorwf	readDHT@dat,f,c
   613                           
   614                           ;main.c: 79: while(PORTCbits.RC0){
   615  007FDE  D00A               	goto	l59
   616  007FE0                     l728:
   617                           
   618                           ;main.c: 80: k++;
   619  007FE0  2A04               	incf	readDHT@k,f,c
   620                           
   621                           ;main.c: 81: if(k>100){
   622  007FE2  0E64               	movlw	100
   623  007FE4  6404               	cpfsgt	readDHT@k,c
   624  007FE6  D004               	goto	l61
   625                           
   626                           ;main.c: 82: time_out = 0;
   627  007FE8  0E00               	movlw	0
   628  007FEA  6E12               	movwf	_time_out,c
   629                           
   630                           ;main.c: 83: return 0;
   631  007FEC  0E00               	movlw	0
   632  007FEE  0012               	return	
   633  007FF0                     l61:
   634                           
   635                           ;main.c: 84: }
   636                           ;main.c: 85: _delay((unsigned long)((1)*(16000000/4000000.0)));
   637  007FF0  D000               	nop2		;2 cycle nop
   638  007FF2  D000               	nop2		;2 cycle nop
   639  007FF4                     l59:
   640  007FF4  B082               	btfsc	3970,0,c	;volatile
   641  007FF6  D7F4               	goto	l728
   642  007FF8                     l738:
   643  007FF8  2A05               	incf	readDHT@i,f,c
   644  007FFA  D7BA               	goto	l704
   645  007FFC                     l742:
   646                           
   647                           ;main.c: 86: }
   648                           ;main.c: 87: }
   649                           ;main.c: 88: }
   650                           ;main.c: 89: return dat;
   651  007FFC  5003               	movf	readDHT@dat,w,c
   652  007FFE  0012               	return	
   653  008000                     __end_of_readDHT:
   654                           	opt stack 0
   655                           wreg	equ	0xFE8
   656                           status	equ	0xFD8
   657                           
   658 ;; *************** function _beginDHT *****************
   659 ;; Defined at:
   660 ;;		line 92 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      unsigned char 
   667 ;; Registers used:
   668 ;;		wreg
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   674 ;;      Params:         0       0       0       0       0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0       0       0
   676 ;;      Temps:          1       0       0       0       0       0       0       0       0
   677 ;;      Totals:         1       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:        1 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_DHTHandler
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text4
   688  007E40                     __ptext4:
   689                           	opt stack 0
   690  007E40                     _beginDHT:
   691                           	opt stack 29
   692                           
   693                           ;main.c: 93: TRISCbits.TRISC0 = 0;
   694                           
   695                           ;incstack = 0
   696  007E40  9094               	bcf	3988,0,c	;volatile
   697                           
   698                           ;main.c: 94: PORTCbits.RC0 &= 0;
   699  007E42  9082               	bcf	3970,0,c	;volatile
   700                           
   701                           ;main.c: 95: _delay((unsigned long)((25)*(16000000/4000.0)));
   702  007E44  0E82               	movlw	130
   703  007E46  6E01               	movwf	??_beginDHT& (0+255),c
   704  007E48  0EDE               	movlw	222
   705  007E4A                     u237:
   706  007E4A  2EE8               	decfsz	wreg,f,c
   707  007E4C  D7FE               	bra	u237
   708  007E4E  2E01               	decfsz	??_beginDHT& (0+255),f,c
   709  007E50  D7FC               	bra	u237
   710                           
   711                           ;main.c: 96: PORTCbits.RC0 = 1;
   712  007E52  8082               	bsf	3970,0,c	;volatile
   713                           
   714                           ;main.c: 97: _delay((unsigned long)((30)*(16000000/4000000.0)));
   715  007E54  0E28               	movlw	40
   716  007E56                     u247:
   717  007E56  2EE8               	decfsz	wreg,f,c
   718  007E58  D7FE               	bra	u247
   719                           
   720                           ;main.c: 98: TRISCbits.TRISC0 = 1;
   721  007E5A  8094               	bsf	3988,0,c	;volatile
   722                           
   723                           ;main.c: 99: _delay((unsigned long)((40)*(16000000/4000000.0)));
   724  007E5C  0E35               	movlw	53
   725  007E5E                     u257:
   726  007E5E  2EE8               	decfsz	wreg,f,c
   727  007E60  D7FE               	bra	u257
   728  007E62  F000               	nop	
   729                           
   730                           ;main.c: 100: if(!PORTCbits.RC0){
   731  007E64  B082               	btfsc	3970,0,c	;volatile
   732  007E66  D00C               	goto	l764
   733                           
   734                           ;main.c: 101: _delay((unsigned long)((80)*(16000000/4000000.0)));
   735  007E68  0E6A               	movlw	106
   736  007E6A                     u267:
   737  007E6A  2EE8               	decfsz	wreg,f,c
   738  007E6C  D7FE               	bra	u267
   739  007E6E  D000               	nop2	
   740                           
   741                           ;main.c: 102: if(PORTCbits.RC0){
   742  007E70  A082               	btfss	3970,0,c	;volatile
   743  007E72  D006               	goto	l764
   744                           
   745                           ;main.c: 103: _delay((unsigned long)((50)*(16000000/4000000.0)));
   746  007E74  0E42               	movlw	66
   747  007E76                     u277:
   748  007E76  2EE8               	decfsz	wreg,f,c
   749  007E78  D7FE               	bra	u277
   750  007E7A  D000               	nop2	
   751                           
   752                           ;main.c: 104: return 1;
   753  007E7C  0E01               	movlw	1
   754  007E7E  0012               	return	
   755  007E80                     l764:
   756                           
   757                           ;main.c: 105: }
   758                           ;main.c: 106: }
   759                           ;main.c: 107: return 0;
   760  007E80  0E00               	movlw	0
   761  007E82  0012               	return	
   762  007E84                     __end_of_beginDHT:
   763                           	opt stack 0
   764  0000                     wreg	equ	0xFE8
   765                           status	equ	0xFD8
   766                           wreg	equ	0xFE8
   767                           status	equ	0xFD8
   768                           
   769                           	psect	rparam
   770  0000                     wreg	equ	0xFE8
   771                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_DHTHandler
    _DHTHandler->_readDHT

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     240
                                             12 COMRAM     2     2      0
                         _DHTHandler
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHTHandler                                           7     7      0     240
                                              5 COMRAM     7     7      0
                           _beginDHT
                            _readDHT
 ---------------------------------------------------------------------------------
 (2) _readDHT                                              5     5      0     105
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _beginDHT                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHTHandler
     _beginDHT
     _readDHT
   _Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      12       1       18.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      12      20        0.0%
DATA                 0      0      12       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Jun 13 14:26:53 2017

                     l61 7FF0                       l53 7F92                       l55 7F8E  
                     l59 7FF4                       u64 7FB6                       u65 7FB2  
                     u74 7FD6                       u75 7FD2              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l710 7F7E                      l702 7F6C                      l704 7F70  
                    l708 7F78                      l812 7E88                      l726 7FC0  
                    l742 7FFC                      l822 7EA6                      l830 7EBE  
                    l728 7FE0                      l808 7F58                      l738 7FF8  
                    l826 7EB2                      l818 7E9A                      l764 7E80  
                    l792 7F12                      l778 7EEA                      l796 7F3C  
           __CFG_CPB$OFF 000000                      u217 7EC8                      u227 7F98  
                    u237 7E4A                      u247 7E56                      u257 7E5E  
           __CFG_CPD$OFF 000000                      u267 7E6A                      u277 7E76  
                    _res 0010                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_WDT$OFF 000000                     _Init 7E2C                     _main 7E84  
                   _temp 000F                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000            __CFG_PLLDIV$4 000000  
                  ?_Init 0001           __CFG_CCP2MX$ON 000000                    ?_main 0001  
    __size_of_DHTHandler 0086                    _PORTB 000F81            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_readDHT 8000  
                  _humid 0011                    status 000FD8           __CFG_ICPRT$OFF 000000  
        __initialization 7E20             __end_of_Init 7E40             __end_of_main 7ED8  
                 ??_Init 0001                   ??_main 000D            __activetblptr 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1         __end_of_beginDHT 7E84  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??_readDHT 0001  
           ??_DHTHandler 0006               __accesstop 0060  __end_of__initialization 7E26  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
     __end_of_DHTHandler 7F5E               __pnvCOMRAM 0012                ?_beginDHT 0001  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7E20                  __ramtop 0800                  __ptext0 7E84  
                __ptext1 7E2C                  __ptext2 7ED8                  __ptext3 7F5E  
                __ptext4 7E40               ??_beginDHT 0001                  _readDHT 7F5E  
   end_of_initialization 7E26                _PORTCbits 000F82                _TRISCbits 000F94  
             readDHT@dat 0003      start_initialization 7E20         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 000F        __size_of_beginDHT 0044       DHTHandler@checkSum 0008  
     DHTHandler@rh_byte1 000B       DHTHandler@rh_byte2 000C                 ?_readDHT 0001  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
               _beginDHT 7E40         __size_of_readDHT 00A2        DHTHandler@t_byte1 0009  
      DHTHandler@t_byte2 000A            __size_of_Init 0014               _DHTHandler 7ED8  
          __size_of_main 0054                 _time_out 0012    __CFG_CPUDIV$OSC1_PLL2 000000  
               readDHT@i 0005                 readDHT@k 0004              ?_DHTHandler 0001  
