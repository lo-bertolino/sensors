

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Jun 13 19:40:13 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 1.42
    27                           ; Generated 13/04/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _INTCON3bits	set	4080
    61  0000                     _INTCON2bits	set	4081
    62  0000                     _LATDbits	set	3980
    63  0000                     _PIR1bits	set	3998
    64  0000                     _SSPBUF	set	4041
    65  0000                     _SSPSTATbits	set	4039
    66  0000                     _TRISAbits	set	3986
    67  0000                     _TRISBbits	set	3987
    68  0000                     _SSPCON1bits	set	4038
    69  0000                     _PORTB	set	3969
    70  0000                     _INTCONbits	set	4082
    71  0000                     _TRISB	set	3987
    72  0000                     _TRISCbits	set	3988
    73  0000                     _PORTCbits	set	3970
    74                           
    75                           ; #config settings
    76  0000                     
    77                           	psect	cinit
    78  007BBE                     __pcinit:
    79                           	opt stack 0
    80  007BBE                     start_initialization:
    81                           	opt stack 0
    82  007BBE                     __initialization:
    83                           	opt stack 0
    84                           
    85                           ; Clear objects allocated to COMRAM (21 bytes)
    86  007BBE  EE00  F001         	lfsr	0,__pbssCOMRAM
    87  007BC2  0E15               	movlw	21
    88  007BC4                     clear_0:
    89  007BC4  6AEE               	clrf	postinc0,c
    90  007BC6  06E8               	decf	wreg,f,c
    91  007BC8  E1FD               	bnz	clear_0
    92  007BCA                     end_of_initialization:
    93                           	opt stack 0
    94  007BCA                     __end_of__initialization:
    95                           	opt stack 0
    96  007BCA  0E00               	movlw	low (__Lmediumconst shr (0+16))
    97  007BCC  6EF8               	movwf	tblptru,c
    98  007BCE  0100               	movlb	0
    99  007BD0  EF7F  F03E         	goto	_main	;jump to C main() function
   100                           tblptru	equ	0xFF8
   101                           postinc0	equ	0xFEE
   102                           wreg	equ	0xFE8
   103                           
   104                           	psect	bssCOMRAM
   105  000001                     __pbssCOMRAM:
   106                           	opt stack 0
   107  000001                     _PTX:
   108                           	opt stack 0
   109  000001                     	ds	1
   110  000002                     _temp:
   111                           	opt stack 0
   112  000002                     	ds	1
   113  000003                     _time_out:
   114                           	opt stack 0
   115  000003                     	ds	1
   116  000004                     _res:
   117                           	opt stack 0
   118  000004                     	ds	1
   119  000005                     _humid:
   120                           	opt stack 0
   121  000005                     	ds	1
   122  000006                     _payload:
   123                           	opt stack 0
   124  000006                     	ds	16
   125                           tblptru	equ	0xFF8
   126                           postinc0	equ	0xFEE
   127                           wreg	equ	0xFE8
   128                           
   129                           	psect	cstackCOMRAM
   130  000016                     __pcstackCOMRAM:
   131                           	opt stack 0
   132  000016                     ??_readDHT:
   133  000016                     ??_beginDHT:
   134  000016                     spi_fast_shift@data:
   135                           	opt stack 0
   136  000016                     spi_transmit_sync@data:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x0
   140  000016                     	ds	1
   141  000017                     wl_module_config_register@value:
   142                           	opt stack 0
   143                           
   144                           ; 1 bytes @ 0x1
   145  000017                     	ds	1
   146  000018                     readDHT@dat:
   147                           	opt stack 0
   148  000018                     wl_module_config_register@reg:
   149                           	opt stack 0
   150  000018                     spi_transmit_sync@length:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x2
   154  000018                     	ds	1
   155  000019                     readDHT@k:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x3
   159  000019                     	ds	1
   160  00001A                     readDHT@i:
   161                           	opt stack 0
   162  00001A                     spi_transmit_sync@tmp:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x4
   166  00001A                     	ds	1
   167  00001B                     ??_DHTHandler:
   168  00001B                     wl_module_write_register@value:
   169                           	opt stack 0
   170  00001B                     wl_module_send@value:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x5
   174  00001B                     	ds	2
   175  00001D                     DHTHandler@checkSum:
   176                           	opt stack 0
   177  00001D                     wl_module_write_register@len:
   178                           	opt stack 0
   179  00001D                     wl_module_send@len:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0x7
   183  00001D                     	ds	1
   184  00001E                     DHTHandler@t_byte1:
   185                           	opt stack 0
   186  00001E                     wl_module_write_register@reg:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x8
   190  00001E                     	ds	1
   191  00001F                     DHTHandler@t_byte2:
   192                           	opt stack 0
   193  00001F                     wl_module_set_RADDR@adr:
   194                           	opt stack 0
   195  00001F                     wl_module_set_TADDR@adr:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x9
   199  00001F                     	ds	1
   200  000020                     DHTHandler@rh_byte1:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0xA
   204  000020                     	ds	1
   205  000021                     DHTHandler@rh_byte2:
   206                           	opt stack 0
   207  000021                     wl_module_tx_config@tx_nr:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0xB
   211  000021                     	ds	1
   212  000022                     wl_module_tx_config@tx_addr:
   213                           	opt stack 0
   214                           
   215                           ; 5 bytes @ 0xC
   216  000022                     	ds	5
   217  000027                     ??_main:
   218                           
   219                           ; 1 bytes @ 0x11
   220  000027                     	ds	2
   221                           tblptru	equ	0xFF8
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 117 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  2   63[None  ] int 
   237 ;; Registers used:
   238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   244 ;;      Params:         0       0       0       0       0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0       0       0       0       0
   246 ;;      Temps:          2       0       0       0       0       0       0       0       0
   247 ;;      Totals:         2       0       0       0       0       0       0       0       0
   248 ;;Total ram usage:        2 bytes
   249 ;; Hardware stack levels required when called:    5
   250 ;; This function calls:
   251 ;;		_DHTHandler
   252 ;;		_Init
   253 ;;		_wl_module_send
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text0
   260  007CFE                     __ptext0:
   261                           	opt stack 0
   262  007CFE                     _main:
   263                           	opt stack 26
   264                           
   265                           ;main.c: 118: Init();
   266                           
   267                           ;incstack = 0
   268  007CFE  ECD5  F03D         	call	_Init	;wreg free
   269  007D02                     l64:
   270                           
   271                           ;main.c: 120: wl_module_send(payload, 16);
   272  007D02  0E06               	movlw	low _payload
   273  007D04  6E1B               	movwf	wl_module_send@value,c
   274  007D06  0E00               	movlw	high _payload
   275  007D08  6E1C               	movwf	wl_module_send@value+1,c
   276  007D0A  0E10               	movlw	16
   277  007D0C  6E1D               	movwf	wl_module_send@len,c
   278  007D0E  EC5A  F03E         	call	_wl_module_send	;wreg free
   279                           
   280                           ;main.c: 121: DHTHandler();
   281  007D12  ECB1  F03E         	call	_DHTHandler	;wreg free
   282                           
   283                           ;main.c: 122: if(res=='s') PORTB = temp;
   284  007D16  0E73               	movlw	115
   285  007D18  1804               	xorwf	_res,w,c
   286  007D1A  A4D8               	btfss	status,2,c
   287  007D1C  D003               	goto	l1451
   288  007D1E  C002  FF81         	movff	_temp,3969	;volatile
   289  007D22  D012               	goto	l1463
   290  007D24                     l1451:
   291                           
   292                           ;main.c: 123: else if(res=='r') PORTB = 0xf1;
   293  007D24  0E72               	movlw	114
   294  007D26  1804               	xorwf	_res,w,c
   295  007D28  A4D8               	btfss	status,2,c
   296  007D2A  D002               	goto	l1455
   297  007D2C  0EF1               	movlw	241
   298  007D2E  D00B               	goto	L2
   299  007D30                     l1455:
   300                           
   301                           ;main.c: 124: else if(res=='t') PORTB = 0xf2;
   302  007D30  0E74               	movlw	116
   303  007D32  1804               	xorwf	_res,w,c
   304  007D34  A4D8               	btfss	status,2,c
   305  007D36  D002               	goto	l1459
   306  007D38  0EF2               	movlw	242
   307  007D3A  D005               	goto	L2
   308  007D3C                     l1459:
   309                           
   310                           ;main.c: 125: else if(res=='c') PORTB = 0xf3;
   311  007D3C  0E63               	movlw	99
   312  007D3E  1804               	xorwf	_res,w,c
   313  007D40  A4D8               	btfss	status,2,c
   314  007D42  D002               	goto	l1463
   315  007D44  0EF3               	movlw	243
   316  007D46                     L2:
   317  007D46  6E81               	movwf	3969,c	;volatile
   318  007D48                     l1463:
   319                           
   320                           ;main.c: 126: _delay((unsigned long)((2000)*(16000000/4000.0)));
   321  007D48  0E29               	movlw	41
   322  007D4A  6E28               	movwf	(??_main+1)& (0+255),c
   323  007D4C  0E96               	movlw	150
   324  007D4E  6E27               	movwf	??_main& (0+255),c
   325  007D50  0E7F               	movlw	127
   326  007D52                     u477:
   327  007D52  2EE8               	decfsz	wreg,f,c
   328  007D54  D7FE               	bra	u477
   329  007D56  2E27               	decfsz	??_main& (0+255),f,c
   330  007D58  D7FC               	bra	u477
   331  007D5A  2E28               	decfsz	(??_main+1)& (0+255),f,c
   332  007D5C  D7FA               	bra	u477
   333  007D5E  F000               	nop	
   334  007D60  D7D0               	goto	l64
   335  007D62                     __end_of_main:
   336                           	opt stack 0
   337                           tblptru	equ	0xFF8
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           status	equ	0xFD8
   341                           
   342 ;; *************** function _wl_module_send *****************
   343 ;; Defined at:
   344 ;;		line 467 in file "wl_module.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;  value           2    5[COMRAM] PTR unsigned char 
   347 ;;		 -> payload(16), 
   348 ;;  len             1    7[COMRAM] unsigned char 
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   360 ;;      Params:         3       0       0       0       0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0       0       0
   363 ;;      Totals:         3       0       0       0       0       0       0       0       0
   364 ;;Total ram usage:        3 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    2
   367 ;; This function calls:
   368 ;;		_spi_fast_shift
   369 ;;		_spi_transmit_sync
   370 ;;		_wl_module_config_register
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text1
   377  007CB4                     __ptext1:
   378                           	opt stack 0
   379  007CB4                     _wl_module_send:
   380                           	opt stack 28
   381  007CB4                     l1417:
   382  007CB4  5001               	movf	_PTX,w,c	;volatile
   383  007CB6  A4D8               	btfss	status,2,c
   384  007CB8  D7FD               	goto	l1417
   385                           
   386                           ;wl_module.c: 473: LATDbits.LATD2 = 0;;
   387  007CBA  948C               	bcf	3980,2,c	;volatile
   388                           
   389                           ;wl_module.c: 475: PTX = 1;
   390  007CBC  0E01               	movlw	1
   391  007CBE  6E01               	movwf	_PTX,c	;volatile
   392                           
   393                           ;wl_module.c: 476: wl_module_config_register(0x00, ( (1<<6) | (1<<3) | (1<<2) ) | ( (1<<
      +                          1) | (0<<0) ) );
   394  007CC0  0E4E               	movlw	78
   395  007CC2  6E17               	movwf	wl_module_config_register@value,c
   396  007CC4  0E00               	movlw	0
   397  007CC6  ECEA  F03D         	call	_wl_module_config_register
   398                           
   399                           ;wl_module.c: 478: LATDbits.LATD3 = 0;;
   400  007CCA  968C               	bcf	3980,3,c	;volatile
   401                           
   402                           ;wl_module.c: 479: spi_fast_shift( 0xE1 );
   403  007CCC  0EE1               	movlw	225
   404  007CCE  ECB9  F03D         	call	_spi_fast_shift
   405                           
   406                           ;wl_module.c: 480: LATDbits.LATD3 = 1;;
   407  007CD2  868C               	bsf	3980,3,c	;volatile
   408                           
   409                           ;wl_module.c: 482: LATDbits.LATD3 = 0;;
   410  007CD4  968C               	bcf	3980,3,c	;volatile
   411                           
   412                           ;wl_module.c: 483: spi_fast_shift( 0xA0 );
   413  007CD6  0EA0               	movlw	160
   414  007CD8  ECB9  F03D         	call	_spi_fast_shift
   415                           
   416                           ;wl_module.c: 484: spi_transmit_sync(value,len);
   417  007CDC  C01B  F016         	movff	wl_module_send@value,spi_transmit_sync@data
   418  007CE0  C01C  F017         	movff	wl_module_send@value+1,spi_transmit_sync@data+1
   419  007CE4  C01D  F018         	movff	wl_module_send@len,spi_transmit_sync@length
   420  007CE8  6A19               	clrf	spi_transmit_sync@length+1,c
   421  007CEA  EC22  F03E         	call	_spi_transmit_sync	;wreg free
   422                           
   423                           ;wl_module.c: 485: LATDbits.LATD3 = 1;;
   424  007CEE  868C               	bsf	3980,3,c	;volatile
   425                           
   426                           ;wl_module.c: 487: LATDbits.LATD2 = 1;;
   427  007CF0  848C               	bsf	3980,2,c	;volatile
   428                           
   429                           ;wl_module.c: 488: _delay((unsigned long)((10)*(16000000/4000000.0)));
   430  007CF2  0E0D               	movlw	13
   431  007CF4                     u487:
   432  007CF4  2EE8               	decfsz	wreg,f,c
   433  007CF6  D7FE               	bra	u487
   434  007CF8  F000               	nop	
   435                           
   436                           ;wl_module.c: 489: LATDbits.LATD2 = 0;;
   437  007CFA  948C               	bcf	3980,2,c	;volatile
   438  007CFC  0012               	return		;funcret
   439  007CFE                     __end_of_wl_module_send:
   440                           	opt stack 0
   441                           tblptru	equ	0xFF8
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           status	equ	0xFD8
   445                           
   446 ;; *************** function _Init *****************
   447 ;; Defined at:
   448 ;;		line 106 in file "main.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   462 ;;      Params:         0       0       0       0       0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:    4
   469 ;; This function calls:
   470 ;;		_wl_module_init
   471 ;;		_wl_module_tx_config
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text2
   478  007BAA                     __ptext2:
   479                           	opt stack 0
   480  007BAA                     _Init:
   481                           	opt stack 26
   482                           
   483                           ;main.c: 108: TRISB = 0;
   484                           
   485                           ;incstack = 0
   486  007BAA  0E00               	movlw	0
   487  007BAC  6E93               	movwf	3987,c	;volatile
   488                           
   489                           ;main.c: 110: wl_module_init();
   490  007BAE  ECC1  F03D         	call	_wl_module_init	;wreg free
   491                           
   492                           ;main.c: 111: wl_module_tx_config(0);
   493  007BB2  0E00               	movlw	0
   494  007BB4  EC45  F03F         	call	_wl_module_tx_config
   495                           
   496                           ;main.c: 113: INTCONbits.PEIE = 1;
   497  007BB8  8CF2               	bsf	intcon,6,c	;volatile
   498                           
   499                           ;main.c: 114: INTCONbits.GIE = 1;
   500  007BBA  8EF2               	bsf	intcon,7,c	;volatile
   501  007BBC  0012               	return		;funcret
   502  007BBE                     __end_of_Init:
   503                           	opt stack 0
   504                           tblptru	equ	0xFF8
   505                           intcon	equ	0xFF2
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           status	equ	0xFD8
   509                           
   510 ;; *************** function _wl_module_tx_config *****************
   511 ;; Defined at:
   512 ;;		line 128 in file "wl_module.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;  tx_nr           1    wreg     unsigned char 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  tx_nr           1   11[COMRAM] unsigned char 
   517 ;;  tx_addr         5   12[COMRAM] unsigned char [5]
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   527 ;;      Params:         0       0       0       0       0       0       0       0       0
   528 ;;      Locals:         6       0       0       0       0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0       0       0
   530 ;;      Totals:         6       0       0       0       0       0       0       0       0
   531 ;;Total ram usage:        6 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    3
   534 ;; This function calls:
   535 ;;		_wl_module_config_register
   536 ;;		_wl_module_set_RADDR
   537 ;;		_wl_module_set_TADDR
   538 ;; This function is called by:
   539 ;;		_Init
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text3
   544  007E8A                     __ptext3:
   545                           	opt stack 0
   546  007E8A                     _wl_module_tx_config:
   547                           	opt stack 26
   548                           
   549                           ;incstack = 0
   550                           ;wl_module_tx_config@tx_nr stored from wreg
   551  007E8A  6E21               	movwf	wl_module_tx_config@tx_nr,c
   552                           
   553                           ;wl_module.c: 130: unsigned char tx_addr[5];
   554                           ;wl_module.c: 133: wl_module_config_register(0x05,2);
   555  007E8C  0E02               	movlw	2
   556  007E8E  6E17               	movwf	wl_module_config_register@value,c
   557  007E90  0E05               	movlw	5
   558  007E92  ECEA  F03D         	call	_wl_module_config_register
   559                           
   560                           ;wl_module.c: 135: wl_module_config_register(0x06,(0x06 | 0x20));
   561  007E96  0E26               	movlw	38
   562  007E98  6E17               	movwf	wl_module_config_register@value,c
   563  007E9A  0E06               	movlw	6
   564  007E9C  ECEA  F03D         	call	_wl_module_config_register
   565                           
   566                           ;wl_module.c: 137: wl_module_config_register(0x00, ( (1<<6) | (1<<3) | (1<<2) ));
   567  007EA0  0E4C               	movlw	76
   568  007EA2  6E17               	movwf	wl_module_config_register@value,c
   569  007EA4  0E00               	movlw	0
   570  007EA6  ECEA  F03D         	call	_wl_module_config_register
   571                           
   572                           ;wl_module.c: 141: wl_module_config_register(0x04,(0x20 | 0x0F));
   573  007EAA  0E2F               	movlw	47
   574  007EAC  6E17               	movwf	wl_module_config_register@value,c
   575  007EAE  0E04               	movlw	4
   576  007EB0  ECEA  F03D         	call	_wl_module_config_register
   577                           
   578                           ;wl_module.c: 144: switch(tx_nr)
   579  007EB4  D08A               	goto	l1399
   580  007EB6                     l1361:
   581                           
   582                           ;wl_module.c: 147: tx_addr[0] = tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xE7
      +                          ;
   583  007EB6  0EE7               	movlw	231
   584  007EB8  6E26               	movwf	wl_module_tx_config@tx_addr+4,c
   585  007EBA  C026  F025         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   586  007EBE  C025  F024         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   587  007EC2  C024  F023         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   588  007EC6  C023  F022         	movff	wl_module_tx_config@tx_addr+1,wl_module_tx_config@tx_addr
   589                           
   590                           ;wl_module.c: 148: wl_module_set_TADDR(tx_addr);
   591  007ECA  0E22               	movlw	low wl_module_tx_config@tx_addr
   592  007ECC  6E1F               	movwf	wl_module_set_TADDR@adr,c
   593  007ECE  0E00               	movlw	high wl_module_tx_config@tx_addr
   594  007ED0  6E20               	movwf	wl_module_set_TADDR@adr+1,c
   595  007ED2  ECCB  F03D         	call	_wl_module_set_TADDR	;wreg free
   596                           
   597                           ;wl_module.c: 149: wl_module_set_RADDR(tx_addr);
   598  007ED6  0E22               	movlw	low wl_module_tx_config@tx_addr
   599  007ED8  6E1F               	movwf	wl_module_set_RADDR@adr,c
   600  007EDA  0E00               	movlw	high wl_module_tx_config@tx_addr
   601  007EDC  6E20               	movwf	wl_module_set_RADDR@adr+1,c
   602  007EDE  ECF6  F03D         	call	_wl_module_set_RADDR	;wreg free
   603                           
   604                           ;wl_module.c: 150: break;
   605  007EE2  D086               	goto	l1401
   606  007EE4                     l1367:
   607                           
   608                           ;wl_module.c: 152: tx_addr[0] = tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2
      +                          ;
   609  007EE4  0EC2               	movlw	194
   610  007EE6  6E26               	movwf	wl_module_tx_config@tx_addr+4,c
   611  007EE8  C026  F025         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   612  007EEC  C025  F024         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   613  007EF0  C024  F023         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   614  007EF4  C023  F022         	movff	wl_module_tx_config@tx_addr+1,wl_module_tx_config@tx_addr
   615                           
   616                           ;wl_module.c: 153: wl_module_set_TADDR(tx_addr);
   617  007EF8  0E22               	movlw	low wl_module_tx_config@tx_addr
   618  007EFA  6E1F               	movwf	wl_module_set_TADDR@adr,c
   619  007EFC  0E00               	movlw	high wl_module_tx_config@tx_addr
   620  007EFE  6E20               	movwf	wl_module_set_TADDR@adr+1,c
   621  007F00  ECCB  F03D         	call	_wl_module_set_TADDR	;wreg free
   622                           
   623                           ;wl_module.c: 154: wl_module_set_RADDR(tx_addr);
   624  007F04  0E22               	movlw	low wl_module_tx_config@tx_addr
   625  007F06  6E1F               	movwf	wl_module_set_RADDR@adr,c
   626  007F08  0E00               	movlw	high wl_module_tx_config@tx_addr
   627  007F0A  6E20               	movwf	wl_module_set_RADDR@adr+1,c
   628  007F0C  ECF6  F03D         	call	_wl_module_set_RADDR	;wreg free
   629                           
   630                           ;wl_module.c: 155: break;
   631  007F10  D06F               	goto	l1401
   632  007F12                     l1373:
   633                           
   634                           ;wl_module.c: 157: tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2;
   635  007F12  0EC2               	movlw	194
   636  007F14  6E26               	movwf	wl_module_tx_config@tx_addr+4,c
   637  007F16  C026  F025         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   638  007F1A  C025  F024         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   639  007F1E  C024  F023         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   640                           
   641                           ;wl_module.c: 158: tx_addr[0] = 0xC3;
   642  007F22  0EC3               	movlw	195
   643  007F24  6E22               	movwf	wl_module_tx_config@tx_addr,c
   644                           
   645                           ;wl_module.c: 159: wl_module_set_TADDR(tx_addr);
   646  007F26  0E22               	movlw	low wl_module_tx_config@tx_addr
   647  007F28  6E1F               	movwf	wl_module_set_TADDR@adr,c
   648  007F2A  0E00               	movlw	high wl_module_tx_config@tx_addr
   649  007F2C  6E20               	movwf	wl_module_set_TADDR@adr+1,c
   650  007F2E  ECCB  F03D         	call	_wl_module_set_TADDR	;wreg free
   651                           
   652                           ;wl_module.c: 160: wl_module_set_RADDR(tx_addr);
   653  007F32  0E22               	movlw	low wl_module_tx_config@tx_addr
   654  007F34  6E1F               	movwf	wl_module_set_RADDR@adr,c
   655  007F36  0E00               	movlw	high wl_module_tx_config@tx_addr
   656  007F38  6E20               	movwf	wl_module_set_RADDR@adr+1,c
   657  007F3A  ECF6  F03D         	call	_wl_module_set_RADDR	;wreg free
   658                           
   659                           ;wl_module.c: 161: break;
   660  007F3E  D058               	goto	l1401
   661  007F40                     l1379:
   662                           
   663                           ;wl_module.c: 163: tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2;
   664  007F40  0EC2               	movlw	194
   665  007F42  6E26               	movwf	wl_module_tx_config@tx_addr+4,c
   666  007F44  C026  F025         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   667  007F48  C025  F024         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   668  007F4C  C024  F023         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   669                           
   670                           ;wl_module.c: 164: tx_addr[0] = 0xC4;
   671  007F50  0EC4               	movlw	196
   672  007F52  6E22               	movwf	wl_module_tx_config@tx_addr,c
   673                           
   674                           ;wl_module.c: 165: wl_module_set_TADDR(tx_addr);
   675  007F54  0E22               	movlw	low wl_module_tx_config@tx_addr
   676  007F56  6E1F               	movwf	wl_module_set_TADDR@adr,c
   677  007F58  0E00               	movlw	high wl_module_tx_config@tx_addr
   678  007F5A  6E20               	movwf	wl_module_set_TADDR@adr+1,c
   679  007F5C  ECCB  F03D         	call	_wl_module_set_TADDR	;wreg free
   680                           
   681                           ;wl_module.c: 166: wl_module_set_RADDR(tx_addr);
   682  007F60  0E22               	movlw	low wl_module_tx_config@tx_addr
   683  007F62  6E1F               	movwf	wl_module_set_RADDR@adr,c
   684  007F64  0E00               	movlw	high wl_module_tx_config@tx_addr
   685  007F66  6E20               	movwf	wl_module_set_RADDR@adr+1,c
   686  007F68  ECF6  F03D         	call	_wl_module_set_RADDR	;wreg free
   687                           
   688                           ;wl_module.c: 167: break;
   689  007F6C  D041               	goto	l1401
   690  007F6E                     l1385:
   691                           
   692                           ;wl_module.c: 169: tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2;
   693  007F6E  0EC2               	movlw	194
   694  007F70  6E26               	movwf	wl_module_tx_config@tx_addr+4,c
   695  007F72  C026  F025         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   696  007F76  C025  F024         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   697  007F7A  C024  F023         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   698                           
   699                           ;wl_module.c: 170: tx_addr[0] = 0xC5;
   700  007F7E  0EC5               	movlw	197
   701  007F80  6E22               	movwf	wl_module_tx_config@tx_addr,c
   702                           
   703                           ;wl_module.c: 171: wl_module_set_TADDR(tx_addr);
   704  007F82  0E22               	movlw	low wl_module_tx_config@tx_addr
   705  007F84  6E1F               	movwf	wl_module_set_TADDR@adr,c
   706  007F86  0E00               	movlw	high wl_module_tx_config@tx_addr
   707  007F88  6E20               	movwf	wl_module_set_TADDR@adr+1,c
   708  007F8A  ECCB  F03D         	call	_wl_module_set_TADDR	;wreg free
   709                           
   710                           ;wl_module.c: 172: wl_module_set_RADDR(tx_addr);
   711  007F8E  0E22               	movlw	low wl_module_tx_config@tx_addr
   712  007F90  6E1F               	movwf	wl_module_set_RADDR@adr,c
   713  007F92  0E00               	movlw	high wl_module_tx_config@tx_addr
   714  007F94  6E20               	movwf	wl_module_set_RADDR@adr+1,c
   715  007F96  ECF6  F03D         	call	_wl_module_set_RADDR	;wreg free
   716                           
   717                           ;wl_module.c: 173: break;
   718  007F9A  D02A               	goto	l1401
   719  007F9C                     l1391:
   720                           
   721                           ;wl_module.c: 175: tx_addr[1] = tx_addr[2] = tx_addr[3] = tx_addr[4] = 0xC2;
   722  007F9C  0EC2               	movlw	194
   723  007F9E  6E26               	movwf	wl_module_tx_config@tx_addr+4,c
   724  007FA0  C026  F025         	movff	wl_module_tx_config@tx_addr+4,wl_module_tx_config@tx_addr+3
   725  007FA4  C025  F024         	movff	wl_module_tx_config@tx_addr+3,wl_module_tx_config@tx_addr+2
   726  007FA8  C024  F023         	movff	wl_module_tx_config@tx_addr+2,wl_module_tx_config@tx_addr+1
   727                           
   728                           ;wl_module.c: 176: tx_addr[0] = 0xC6;
   729  007FAC  0EC6               	movlw	198
   730  007FAE  6E22               	movwf	wl_module_tx_config@tx_addr,c
   731                           
   732                           ;wl_module.c: 177: wl_module_set_TADDR(tx_addr);
   733  007FB0  0E22               	movlw	low wl_module_tx_config@tx_addr
   734  007FB2  6E1F               	movwf	wl_module_set_TADDR@adr,c
   735  007FB4  0E00               	movlw	high wl_module_tx_config@tx_addr
   736  007FB6  6E20               	movwf	wl_module_set_TADDR@adr+1,c
   737  007FB8  ECCB  F03D         	call	_wl_module_set_TADDR	;wreg free
   738                           
   739                           ;wl_module.c: 178: wl_module_set_RADDR(tx_addr);
   740  007FBC  0E22               	movlw	low wl_module_tx_config@tx_addr
   741  007FBE  6E1F               	movwf	wl_module_set_RADDR@adr,c
   742  007FC0  0E00               	movlw	high wl_module_tx_config@tx_addr
   743  007FC2  6E20               	movwf	wl_module_set_RADDR@adr+1,c
   744  007FC4  ECF6  F03D         	call	_wl_module_set_RADDR	;wreg free
   745                           
   746                           ;wl_module.c: 180: }
   747                           
   748                           ;wl_module.c: 179: break;
   749  007FC8  D013               	goto	l1401
   750  007FCA                     l1399:
   751  007FCA  5021               	movf	wl_module_tx_config@tx_nr,w,c
   752                           
   753                           ; Switch size 1, requested type "space"
   754                           ; Number of cases is 6, Range of values is 0 to 5
   755                           ; switch strategies available:
   756                           ; Name         Instructions Cycles
   757                           ; simple_byte           19    10 (average)
   758                           ;	Chosen strategy is simple_byte
   759  007FCC  0A00               	xorlw	0	; case 0
   760  007FCE  B4D8               	btfsc	status,2,c
   761  007FD0  D772               	goto	l1361
   762  007FD2  0A01               	xorlw	1	; case 1
   763  007FD4  B4D8               	btfsc	status,2,c
   764  007FD6  D786               	goto	l1367
   765  007FD8  0A03               	xorlw	3	; case 2
   766  007FDA  B4D8               	btfsc	status,2,c
   767  007FDC  D79A               	goto	l1373
   768  007FDE  0A01               	xorlw	1	; case 3
   769  007FE0  B4D8               	btfsc	status,2,c
   770  007FE2  D7AE               	goto	l1379
   771  007FE4  0A07               	xorlw	7	; case 4
   772  007FE6  B4D8               	btfsc	status,2,c
   773  007FE8  D7C2               	goto	l1385
   774  007FEA  0A01               	xorlw	1	; case 5
   775  007FEC  B4D8               	btfsc	status,2,c
   776  007FEE  D7D6               	goto	l1391
   777  007FF0                     l1401:
   778                           
   779                           ;wl_module.c: 182: PTX =0;
   780  007FF0  0E00               	movlw	0
   781  007FF2  6E01               	movwf	_PTX,c	;volatile
   782                           
   783                           ;wl_module.c: 183: wl_module_config_register(0x00, ( (1<<6) | (1<<3) | (1<<2) ) | ( (1<<
      +                          1) | (0<<0) ) );
   784  007FF4  0E4E               	movlw	78
   785  007FF6  6E17               	movwf	wl_module_config_register@value,c
   786  007FF8  0E00               	movlw	0
   787  007FFA  ECEA  F03D         	call	_wl_module_config_register
   788  007FFE  0012               	return		;funcret
   789  008000                     __end_of_wl_module_tx_config:
   790                           	opt stack 0
   791                           tblptru	equ	0xFF8
   792                           intcon	equ	0xFF2
   793                           postinc0	equ	0xFEE
   794                           wreg	equ	0xFE8
   795                           status	equ	0xFD8
   796                           
   797 ;; *************** function _wl_module_set_TADDR *****************
   798 ;; Defined at:
   799 ;;		line 321 in file "wl_module.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  adr             2    9[COMRAM] PTR unsigned char 
   802 ;;		 -> wl_module_tx_config@tx_addr(5), 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   814 ;;      Params:         2       0       0       0       0       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0
   817 ;;      Totals:         2       0       0       0       0       0       0       0       0
   818 ;;Total ram usage:        2 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    2
   821 ;; This function calls:
   822 ;;		_wl_module_write_register
   823 ;; This function is called by:
   824 ;;		_wl_module_tx_config
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text4
   829  007B96                     __ptext4:
   830                           	opt stack 0
   831  007B96                     _wl_module_set_TADDR:
   832                           	opt stack 26
   833                           
   834                           ;wl_module.c: 324: wl_module_write_register(0x10, adr,5);
   835                           
   836                           ;incstack = 0
   837  007B96  C01F  F01B         	movff	wl_module_set_TADDR@adr,wl_module_write_register@value
   838  007B9A  C020  F01C         	movff	wl_module_set_TADDR@adr+1,wl_module_write_register@value+1
   839  007B9E  0E05               	movlw	5
   840  007BA0  6E1D               	movwf	wl_module_write_register@len,c
   841  007BA2  0E10               	movlw	16
   842  007BA4  EC10  F03E         	call	_wl_module_write_register
   843  007BA8  0012               	return		;funcret
   844  007BAA                     __end_of_wl_module_set_TADDR:
   845                           	opt stack 0
   846                           tblptru	equ	0xFF8
   847                           intcon	equ	0xFF2
   848                           postinc0	equ	0xFEE
   849                           wreg	equ	0xFE8
   850                           status	equ	0xFD8
   851                           
   852 ;; *************** function _wl_module_set_RADDR *****************
   853 ;; Defined at:
   854 ;;		line 313 in file "wl_module.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  adr             2    9[COMRAM] PTR unsigned char 
   857 ;;		 -> wl_module_tx_config@tx_addr(5), 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   869 ;;      Params:         2       0       0       0       0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0
   872 ;;      Totals:         2       0       0       0       0       0       0       0       0
   873 ;;Total ram usage:        2 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    2
   876 ;; This function calls:
   877 ;;		_wl_module_write_register
   878 ;; This function is called by:
   879 ;;		_wl_module_tx_config
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text5
   884  007BEC                     __ptext5:
   885                           	opt stack 0
   886  007BEC                     _wl_module_set_RADDR:
   887                           	opt stack 26
   888                           
   889                           ;wl_module.c: 316: LATDbits.LATD2 = 0;;
   890                           
   891                           ;incstack = 0
   892  007BEC  948C               	bcf	3980,2,c	;volatile
   893                           
   894                           ;wl_module.c: 317: wl_module_write_register(0x0A,adr,5);
   895  007BEE  C01F  F01B         	movff	wl_module_set_RADDR@adr,wl_module_write_register@value
   896  007BF2  C020  F01C         	movff	wl_module_set_RADDR@adr+1,wl_module_write_register@value+1
   897  007BF6  0E05               	movlw	5
   898  007BF8  6E1D               	movwf	wl_module_write_register@len,c
   899  007BFA  0E0A               	movlw	10
   900  007BFC  EC10  F03E         	call	_wl_module_write_register
   901                           
   902                           ;wl_module.c: 318: LATDbits.LATD2 = 1;;
   903  007C00  848C               	bsf	3980,2,c	;volatile
   904  007C02  0012               	return		;funcret
   905  007C04                     __end_of_wl_module_set_RADDR:
   906                           	opt stack 0
   907                           tblptru	equ	0xFF8
   908                           intcon	equ	0xFF2
   909                           postinc0	equ	0xFEE
   910                           wreg	equ	0xFE8
   911                           status	equ	0xFD8
   912                           
   913 ;; *************** function _wl_module_write_register *****************
   914 ;; Defined at:
   915 ;;		line 457 in file "wl_module.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  reg             1    wreg     unsigned char 
   918 ;;  value           2    5[COMRAM] PTR unsigned char 
   919 ;;		 -> wl_module_set_rx_pw@payloadwidth(1), wl_module_power_down@config(1), wl_module_set_as_tx@config(1), wl_module_tx
      +_config@tx_addr(5), 
   920 ;;		 -> wl_module_rx_config@data(5), 
   921 ;;  len             1    7[COMRAM] unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  reg             1    8[COMRAM] unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   933 ;;      Params:         3       0       0       0       0       0       0       0       0
   934 ;;      Locals:         1       0       0       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0
   936 ;;      Totals:         4       0       0       0       0       0       0       0       0
   937 ;;Total ram usage:        4 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    1
   940 ;; This function calls:
   941 ;;		_spi_fast_shift
   942 ;;		_spi_transmit_sync
   943 ;; This function is called by:
   944 ;;		_wl_module_set_RADDR
   945 ;;		_wl_module_set_TADDR
   946 ;;		_wl_module_set_tx_addr
   947 ;;		_wl_module_set_as_tx
   948 ;;		_wl_module_power_down
   949 ;;		_wl_module_set_rx_addr
   950 ;;		_wl_module_set_rx_pw
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text6
   955  007C20                     __ptext6:
   956                           	opt stack 0
   957  007C20                     _wl_module_write_register:
   958                           	opt stack 26
   959                           
   960                           ;incstack = 0
   961                           ;wl_module_write_register@reg stored from wreg
   962  007C20  6E1E               	movwf	wl_module_write_register@reg,c
   963                           
   964                           ;wl_module.c: 460: LATDbits.LATD3 = 0;;
   965  007C22  968C               	bcf	3980,3,c	;volatile
   966                           
   967                           ;wl_module.c: 461: spi_fast_shift(0x20 | (0x1F & reg));
   968  007C24  501E               	movf	wl_module_write_register@reg,w,c
   969  007C26  0B1F               	andlw	31
   970  007C28  0920               	iorlw	32
   971  007C2A  ECB9  F03D         	call	_spi_fast_shift
   972                           
   973                           ;wl_module.c: 462: spi_transmit_sync(value,len);
   974  007C2E  C01B  F016         	movff	wl_module_write_register@value,spi_transmit_sync@data
   975  007C32  C01C  F017         	movff	wl_module_write_register@value+1,spi_transmit_sync@data+1
   976  007C36  C01D  F018         	movff	wl_module_write_register@len,spi_transmit_sync@length
   977  007C3A  6A19               	clrf	spi_transmit_sync@length+1,c
   978  007C3C  EC22  F03E         	call	_spi_transmit_sync	;wreg free
   979                           
   980                           ;wl_module.c: 463: LATDbits.LATD3 = 1;;
   981  007C40  868C               	bsf	3980,3,c	;volatile
   982  007C42  0012               	return		;funcret
   983  007C44                     __end_of_wl_module_write_register:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           intcon	equ	0xFF2
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           status	equ	0xFD8
   990                           
   991 ;; *************** function _spi_transmit_sync *****************
   992 ;; Defined at:
   993 ;;		line 33 in file "spi.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  data            2    0[COMRAM] PTR unsigned char 
   996 ;;		 -> wl_module_set_rx_pw@payloadwidth(1), wl_module_power_down@config(1), wl_module_set_as_tx@config(1), wl_module_tx
      +_config@tx_addr(5), 
   997 ;;		 -> wl_module_rx_config@data(5), payload(16), 
   998 ;;  length          2    2[COMRAM] unsigned int 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  tmp             1    4[COMRAM] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1010 ;;      Params:         4       0       0       0       0       0       0       0       0
  1011 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1013 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1014 ;;Total ram usage:        5 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_wl_module_write_register
  1020 ;;		_wl_module_send
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text7
  1025  007C44                     __ptext7:
  1026                           	opt stack 0
  1027  007C44                     _spi_transmit_sync:
  1028                           	opt stack 29
  1029                           
  1030                           ;spi.c: 34: unsigned char tmp;
  1031                           ;spi.c: 35: while(length){
  1032                           
  1033                           ;incstack = 0
  1034  007C44  D010               	goto	l1333
  1035  007C46                     l1329:
  1036                           
  1037                           ;spi.c: 36: SSPBUF = *data;
  1038  007C46  C016  FFD9         	movff	spi_transmit_sync@data,fsr2l
  1039  007C4A  C017  FFDA         	movff	spi_transmit_sync@data+1,fsr2h
  1040  007C4E  50DF               	movf	indf2,w,c
  1041  007C50  6EC9               	movwf	4041,c	;volatile
  1042  007C52                     l96:
  1043  007C52  A69E               	btfss	3998,3,c	;volatile
  1044  007C54  D7FE               	goto	l96
  1045                           
  1046                           ;spi.c: 38: PIR1bits.SSPIF = 0;
  1047  007C56  969E               	bcf	3998,3,c	;volatile
  1048                           
  1049                           ;spi.c: 39: tmp = SSPBUF;
  1050  007C58  CFC9 F01A          	movff	4041,spi_transmit_sync@tmp	;volatile
  1051                           
  1052                           ;spi.c: 40: length--;
  1053  007C5C  0618               	decf	spi_transmit_sync@length,f,c
  1054  007C5E  A0D8               	btfss	status,0,c
  1055  007C60  0619               	decf	spi_transmit_sync@length+1,f,c
  1056                           
  1057                           ;spi.c: 41: data++;
  1058  007C62  4A16               	infsnz	spi_transmit_sync@data,f,c
  1059  007C64  2A17               	incf	spi_transmit_sync@data+1,f,c
  1060  007C66                     l1333:
  1061  007C66  5018               	movf	spi_transmit_sync@length,w,c
  1062  007C68  1019               	iorwf	spi_transmit_sync@length+1,w,c
  1063  007C6A  B4D8               	btfsc	status,2,c
  1064  007C6C  0012               	return	
  1065  007C6E  D7EB               	goto	l1329
  1066  007C70                     __end_of_spi_transmit_sync:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           intcon	equ	0xFF2
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           indf2	equ	0xFDF
  1073                           fsr2h	equ	0xFDA
  1074                           fsr2l	equ	0xFD9
  1075                           status	equ	0xFD8
  1076                           
  1077 ;; *************** function _wl_module_config_register *****************
  1078 ;; Defined at:
  1079 ;;		line 439 in file "wl_module.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  reg             1    wreg     unsigned char 
  1082 ;;  value           1    1[COMRAM] unsigned char 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  reg             1    2[COMRAM] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1094 ;;      Params:         1       0       0       0       0       0       0       0       0
  1095 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1097 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1098 ;;Total ram usage:        2 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; Hardware stack levels required when called:    1
  1101 ;; This function calls:
  1102 ;;		_spi_fast_shift
  1103 ;; This function is called by:
  1104 ;;		_wl_module_tx_config
  1105 ;;		_wl_module_send
  1106 ;;		_wl_module_config
  1107 ;;		_wl_module_rx_config
  1108 ;;		_wl_module_get_data
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text8
  1113  007BD4                     __ptext8:
  1114                           	opt stack 0
  1115  007BD4                     _wl_module_config_register:
  1116                           	opt stack 28
  1117                           
  1118                           ;incstack = 0
  1119                           ;wl_module_config_register@reg stored from wreg
  1120  007BD4  6E18               	movwf	wl_module_config_register@reg,c
  1121                           
  1122                           ;wl_module.c: 442: LATDbits.LATD3 = 0;;
  1123  007BD6  968C               	bcf	3980,3,c	;volatile
  1124                           
  1125                           ;wl_module.c: 443: spi_fast_shift(0x20 | (0x1F & reg));
  1126  007BD8  5018               	movf	wl_module_config_register@reg,w,c
  1127  007BDA  0B1F               	andlw	31
  1128  007BDC  0920               	iorlw	32
  1129  007BDE  ECB9  F03D         	call	_spi_fast_shift
  1130                           
  1131                           ;wl_module.c: 444: spi_fast_shift(value);
  1132  007BE2  5017               	movf	wl_module_config_register@value,w,c
  1133  007BE4  ECB9  F03D         	call	_spi_fast_shift
  1134                           
  1135                           ;wl_module.c: 445: LATDbits.LATD3 = 1;;
  1136  007BE8  868C               	bsf	3980,3,c	;volatile
  1137  007BEA  0012               	return		;funcret
  1138  007BEC                     __end_of_wl_module_config_register:
  1139                           	opt stack 0
  1140                           tblptru	equ	0xFF8
  1141                           intcon	equ	0xFF2
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           indf2	equ	0xFDF
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8
  1148                           
  1149 ;; *************** function _spi_fast_shift *****************
  1150 ;; Defined at:
  1151 ;;		line 57 in file "spi.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  data            1    wreg     unsigned char 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  data            1    0[COMRAM] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      unsigned char 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1165 ;;      Params:         0       0       0       0       0       0       0       0       0
  1166 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1168 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1169 ;;Total ram usage:        1 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_wl_module_config_register
  1175 ;;		_wl_module_write_register
  1176 ;;		_wl_module_send
  1177 ;;		_wl_module_data_ready
  1178 ;;		_wl_module_get_one_byte
  1179 ;;		_wl_module_get_data
  1180 ;;		_wl_module_read_register
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text9
  1185  007B72                     __ptext9:
  1186                           	opt stack 0
  1187  007B72                     _spi_fast_shift:
  1188                           	opt stack 28
  1189                           
  1190                           ;incstack = 0
  1191                           ;spi_fast_shift@data stored from wreg
  1192  007B72  6E16               	movwf	spi_fast_shift@data,c
  1193                           
  1194                           ;spi.c: 58: SSPBUF = data;
  1195  007B74  C016  FFC9         	movff	spi_fast_shift@data,4041	;volatile
  1196  007B78                     l112:
  1197  007B78  A69E               	btfss	3998,3,c	;volatile
  1198  007B7A  D7FE               	goto	l112
  1199                           
  1200                           ;spi.c: 60: PIR1bits.SSPIF = 0;
  1201  007B7C  969E               	bcf	3998,3,c	;volatile
  1202                           
  1203                           ;spi.c: 61: return SSPBUF;
  1204  007B7E  50C9               	movf	4041,w,c	;volatile
  1205  007B80  0012               	return		;funcret
  1206  007B82                     __end_of_spi_fast_shift:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           intcon	equ	0xFF2
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           indf2	equ	0xFDF
  1213                           fsr2h	equ	0xFDA
  1214                           fsr2l	equ	0xFD9
  1215                           status	equ	0xFD8
  1216                           
  1217 ;; *************** function _wl_module_init *****************
  1218 ;; Defined at:
  1219 ;;		line 45 in file "wl_module.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1233 ;;      Params:         0       0       0       0       0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    1
  1240 ;; This function calls:
  1241 ;;		_spi_init
  1242 ;; This function is called by:
  1243 ;;		_Init
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text10
  1248  007B82                     __ptext10:
  1249                           	opt stack 0
  1250  007B82                     _wl_module_init:
  1251                           	opt stack 28
  1252                           
  1253                           ;wl_module.c: 50: TRISBbits.TRISB4 = 0;
  1254                           
  1255                           ;incstack = 0
  1256  007B82  9893               	bcf	3987,4,c	;volatile
  1257                           
  1258                           ;wl_module.c: 51: TRISBbits.TRISB3 = 0;
  1259  007B84  9693               	bcf	3987,3,c	;volatile
  1260                           
  1261                           ;wl_module.c: 52: LATDbits.LATD2 = 0;;
  1262  007B86  948C               	bcf	3980,2,c	;volatile
  1263                           
  1264                           ;wl_module.c: 53: LATDbits.LATD3 = 1;;
  1265  007B88  868C               	bsf	3980,3,c	;volatile
  1266                           
  1267                           ;wl_module.c: 57: TRISBbits.TRISB2 = 1;
  1268  007B8A  8493               	bsf	3987,2,c	;volatile
  1269                           
  1270                           ;wl_module.c: 58: INTCON2bits.INTEDG2 = 0;
  1271  007B8C  98F1               	bcf	intcon2,4,c	;volatile
  1272                           
  1273                           ;wl_module.c: 59: INTCON3bits.INT2IE = 1;
  1274  007B8E  88F0               	bsf	intcon3,4,c	;volatile
  1275                           
  1276                           ;wl_module.c: 62: spi_init();
  1277  007B90  EC02  F03E         	call	_spi_init	;wreg free
  1278  007B94  0012               	return		;funcret
  1279  007B96                     __end_of_wl_module_init:
  1280                           	opt stack 0
  1281                           tblptru	equ	0xFF8
  1282                           intcon	equ	0xFF2
  1283                           intcon2	equ	0xFF1
  1284                           intcon3	equ	0xFF0
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           indf2	equ	0xFDF
  1288                           fsr2h	equ	0xFDA
  1289                           fsr2l	equ	0xFD9
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _spi_init *****************
  1293 ;; Defined at:
  1294 ;;		line 12 in file "spi.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		None
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1308 ;;      Params:         0       0       0       0       0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_wl_module_init
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text11
  1322  007C04                     __ptext11:
  1323                           	opt stack 0
  1324  007C04                     _spi_init:
  1325                           	opt stack 28
  1326                           
  1327                           ;spi.c: 14: SSPCON1bits.SSPEN = 0;
  1328                           
  1329                           ;incstack = 0
  1330  007C04  9AC6               	bcf	4038,5,c	;volatile
  1331                           
  1332                           ;spi.c: 16: TRISBbits.TRISB0 = 1;
  1333  007C06  8093               	bsf	3987,0,c	;volatile
  1334                           
  1335                           ;spi.c: 19: TRISAbits.TRISA5 = 1;
  1336  007C08  8A92               	bsf	3986,5,c	;volatile
  1337                           
  1338                           ;spi.c: 22: TRISCbits.TRISC7 = 0;
  1339  007C0A  9E94               	bcf	3988,7,c	;volatile
  1340                           
  1341                           ;spi.c: 23: TRISBbits.TRISB1 = 0;
  1342  007C0C  9293               	bcf	3987,1,c	;volatile
  1343                           
  1344                           ;spi.c: 26: SSPCON1bits.CKP = 0;
  1345  007C0E  98C6               	bcf	4038,4,c	;volatile
  1346                           
  1347                           ;spi.c: 27: SSPSTATbits.CKE = 1;
  1348  007C10  8CC7               	bsf	4039,6,c	;volatile
  1349                           
  1350                           ;spi.c: 28: SSPSTATbits.SMP = 1;
  1351  007C12  8EC7               	bsf	4039,7,c	;volatile
  1352                           
  1353                           ;spi.c: 29: SSPCON1bits.SSPM = 0;
  1354  007C14  90C6               	bcf	4038,0,c	;volatile
  1355  007C16  92C6               	bcf	4038,1,c	;volatile
  1356  007C18  94C6               	bcf	4038,2,c	;volatile
  1357  007C1A  96C6               	bcf	4038,3,c	;volatile
  1358                           
  1359                           ;spi.c: 30: SSPCON1bits.SSPEN = 1;
  1360  007C1C  8AC6               	bsf	4038,5,c	;volatile
  1361  007C1E  0012               	return		;funcret
  1362  007C20                     __end_of_spi_init:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           intcon	equ	0xFF2
  1366                           intcon2	equ	0xFF1
  1367                           intcon3	equ	0xFF0
  1368                           postinc0	equ	0xFEE
  1369                           wreg	equ	0xFE8
  1370                           indf2	equ	0xFDF
  1371                           fsr2h	equ	0xFDA
  1372                           fsr2l	equ	0xFD9
  1373                           status	equ	0xFD8
  1374                           
  1375 ;; *************** function _DHTHandler *****************
  1376 ;; Defined at:
  1377 ;;		line 81 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  rh_byte2        1   11[COMRAM] unsigned char 
  1382 ;;  rh_byte1        1   10[COMRAM] unsigned char 
  1383 ;;  t_byte2         1    9[COMRAM] unsigned char 
  1384 ;;  t_byte1         1    8[COMRAM] unsigned char 
  1385 ;;  checkSum        1    7[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        7 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    1
  1402 ;; This function calls:
  1403 ;;		_beginDHT
  1404 ;;		_readDHT
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text12
  1411  007D62                     __ptext12:
  1412                           	opt stack 0
  1413  007D62                     _DHTHandler:
  1414                           	opt stack 29
  1415                           
  1416                           ;main.c: 82: unsigned char t_byte1, t_byte2, rh_byte1, rh_byte2, checkSum;
  1417                           ;main.c: 83: time_out = 1;
  1418                           
  1419                           ;incstack = 0
  1420  007D62  0E01               	movlw	1
  1421  007D64  6E03               	movwf	_time_out,c
  1422                           
  1423                           ;main.c: 84: if(!beginDHT())
  1424  007D66  EC38  F03E         	call	_beginDHT	;wreg free
  1425  007D6A  0900               	iorlw	0
  1426  007D6C  A4D8               	btfss	status,2,c
  1427  007D6E  D002               	goto	l1049
  1428                           
  1429                           ;main.c: 85: res = 'r';
  1430  007D70  0E72               	movlw	114
  1431  007D72  6E04               	movwf	_res,c
  1432  007D74                     l1049:
  1433                           
  1434                           ;main.c: 86: rh_byte1 = readDHT();
  1435  007D74  ECF4  F03E         	call	_readDHT	;wreg free
  1436  007D78  6E20               	movwf	DHTHandler@rh_byte1,c
  1437                           
  1438                           ;main.c: 87: rh_byte2 = readDHT();
  1439  007D7A  ECF4  F03E         	call	_readDHT	;wreg free
  1440  007D7E  6E21               	movwf	DHTHandler@rh_byte2,c
  1441                           
  1442                           ;main.c: 88: t_byte1 = readDHT();
  1443  007D80  ECF4  F03E         	call	_readDHT	;wreg free
  1444  007D84  6E1E               	movwf	DHTHandler@t_byte1,c
  1445                           
  1446                           ;main.c: 89: t_byte2 = readDHT();
  1447  007D86  ECF4  F03E         	call	_readDHT	;wreg free
  1448  007D8A  6E1F               	movwf	DHTHandler@t_byte2,c
  1449                           
  1450                           ;main.c: 90: checkSum = readDHT();
  1451  007D8C  ECF4  F03E         	call	_readDHT	;wreg free
  1452  007D90  6E1D               	movwf	DHTHandler@checkSum,c
  1453                           
  1454                           ;main.c: 91: if(time_out)
  1455  007D92  5003               	movf	_time_out,w,c
  1456  007D94  B4D8               	btfsc	status,2,c
  1457  007D96  D002               	goto	l1063
  1458                           
  1459                           ;main.c: 92: res = 't';
  1460  007D98  0E74               	movlw	116
  1461  007D9A  6E04               	movwf	_res,c
  1462  007D9C                     l1063:
  1463                           
  1464                           ;main.c: 93: if(checkSum!=((rh_byte1+rh_byte2+t_byte1+t_byte2) & 0xFF))
  1465  007D9C  5021               	movf	DHTHandler@rh_byte2,w,c
  1466  007D9E  C020  F01B         	movff	DHTHandler@rh_byte1,??_DHTHandler
  1467  007DA2  6A1C               	clrf	(??_DHTHandler+1)& (0+255),c
  1468  007DA4  261B               	addwf	??_DHTHandler,f,c
  1469  007DA6  0E00               	movlw	0
  1470  007DA8  221C               	addwfc	??_DHTHandler+1,f,c
  1471  007DAA  501E               	movf	DHTHandler@t_byte1,w,c
  1472  007DAC  261B               	addwf	??_DHTHandler,f,c
  1473  007DAE  0E00               	movlw	0
  1474  007DB0  221C               	addwfc	??_DHTHandler+1,f,c
  1475  007DB2  501F               	movf	DHTHandler@t_byte2,w,c
  1476  007DB4  261B               	addwf	??_DHTHandler,f,c
  1477  007DB6  0E00               	movlw	0
  1478  007DB8  221C               	addwfc	??_DHTHandler+1,f,c
  1479  007DBA  501B               	movf	??_DHTHandler,w,c
  1480  007DBC  181D               	xorwf	DHTHandler@checkSum,w,c
  1481  007DBE  B4D8               	btfsc	status,2,c
  1482  007DC0  D002               	goto	l1067
  1483                           
  1484                           ;main.c: 94: res = 'c';
  1485  007DC2  0E63               	movlw	99
  1486  007DC4  6E04               	movwf	_res,c
  1487  007DC6                     l1067:
  1488                           
  1489                           ;main.c: 95: humid = rh_byte1;
  1490  007DC6  C020  F005         	movff	DHTHandler@rh_byte1,_humid
  1491                           
  1492                           ;main.c: 96: humid = (humid<<8)|rh_byte2;
  1493  007DCA  C021  F005         	movff	DHTHandler@rh_byte2,_humid
  1494                           
  1495                           ;main.c: 97: temp = t_byte1;
  1496  007DCE  C01E  F002         	movff	DHTHandler@t_byte1,_temp
  1497                           
  1498                           ;main.c: 98: temp = (temp<<8)|t_byte2;
  1499  007DD2  C01F  F002         	movff	DHTHandler@t_byte2,_temp
  1500                           
  1501                           ;main.c: 99: if(temp>0X80)
  1502  007DD6  0E80               	movlw	128
  1503  007DD8  6402               	cpfsgt	_temp,c
  1504  007DDA  D003               	goto	l1079
  1505                           
  1506                           ;main.c: 100: temp -= temp&0X7F;
  1507  007DDC  5002               	movf	_temp,w,c
  1508  007DDE  0B7F               	andlw	127
  1509  007DE0  5E02               	subwf	_temp,f,c
  1510  007DE2                     l1079:
  1511                           
  1512                           ;main.c: 101: res = 's';
  1513  007DE2  0E73               	movlw	115
  1514  007DE4  6E04               	movwf	_res,c
  1515  007DE6  0012               	return		;funcret
  1516  007DE8                     __end_of_DHTHandler:
  1517                           	opt stack 0
  1518                           tblptru	equ	0xFF8
  1519                           intcon	equ	0xFF2
  1520                           intcon2	equ	0xFF1
  1521                           intcon3	equ	0xFF0
  1522                           postinc0	equ	0xFEE
  1523                           wreg	equ	0xFE8
  1524                           indf2	equ	0xFDF
  1525                           fsr2h	equ	0xFDA
  1526                           fsr2l	equ	0xFD9
  1527                           status	equ	0xFD8
  1528                           
  1529 ;; *************** function _readDHT *****************
  1530 ;; Defined at:
  1531 ;;		line 33 in file "main.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  i               1    4[COMRAM] unsigned char 
  1536 ;;  k               1    3[COMRAM] unsigned char 
  1537 ;;  dat             1    2[COMRAM] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0
  1548 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1549 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1550 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1551 ;;Total ram usage:        5 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_DHTHandler
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text13
  1561  007DE8                     __ptext13:
  1562                           	opt stack 0
  1563  007DE8                     _readDHT:
  1564                           	opt stack 29
  1565                           
  1566                           ;main.c: 34: unsigned char i, k, dat = 0;
  1567                           
  1568                           ;incstack = 0
  1569  007DE8  0E00               	movlw	0
  1570  007DEA  6E18               	movwf	readDHT@dat,c
  1571                           
  1572                           ;main.c: 35: if(!time_out) return 0;
  1573  007DEC  5003               	movf	_time_out,w,c
  1574  007DEE  A4D8               	btfss	status,2,c
  1575  007DF0  D002               	goto	l927
  1576  007DF2  0E00               	movlw	0
  1577  007DF4  0012               	return	
  1578  007DF6                     l927:
  1579                           
  1580                           ;main.c: 36: for(i = 0; i<8; i++){
  1581  007DF6  0E00               	movlw	0
  1582  007DF8  6E1A               	movwf	readDHT@i,c
  1583  007DFA                     l929:
  1584  007DFA  0E07               	movlw	7
  1585  007DFC  641A               	cpfsgt	readDHT@i,c
  1586  007DFE  D001               	goto	l933
  1587  007E00  D042               	goto	l967
  1588  007E02                     l933:
  1589                           
  1590                           ;main.c: 37: k = 0;
  1591  007E02  0E00               	movlw	0
  1592  007E04  6E19               	movwf	readDHT@k,c
  1593                           
  1594                           ;main.c: 38: while(!PORTCbits.RC0){
  1595  007E06  D00A               	goto	l35
  1596  007E08                     l935:
  1597                           
  1598                           ;main.c: 39: k++;
  1599  007E08  2A19               	incf	readDHT@k,f,c
  1600                           
  1601                           ;main.c: 40: if(k>100){
  1602  007E0A  0E64               	movlw	100
  1603  007E0C  6419               	cpfsgt	readDHT@k,c
  1604  007E0E  D004               	goto	l37
  1605                           
  1606                           ;main.c: 41: time_out = 0;
  1607  007E10  0E00               	movlw	0
  1608  007E12  6E03               	movwf	_time_out,c
  1609                           
  1610                           ;main.c: 42: return 0;
  1611  007E14  0E00               	movlw	0
  1612  007E16  0012               	return	
  1613  007E18                     l37:
  1614                           
  1615                           ;main.c: 43: }
  1616                           ;main.c: 44: _delay((unsigned long)((1)*(16000000/4000000.0)));
  1617  007E18  D000               	nop2		;2 cycle nop
  1618  007E1A  D000               	nop2		;2 cycle nop
  1619  007E1C                     l35:
  1620  007E1C  A082               	btfss	3970,0,c	;volatile
  1621  007E1E  D7F4               	goto	l935
  1622                           
  1623                           ;main.c: 45: }
  1624                           ;main.c: 46: _delay((unsigned long)((30)*(16000000/4000000.0)));
  1625  007E20  0E28               	movlw	40
  1626  007E22                     u497:
  1627  007E22  2EE8               	decfsz	wreg,f,c
  1628  007E24  D7FE               	bra	u497
  1629                           
  1630                           ;main.c: 47: if(!PORTCbits.RC0) dat &= 0<<(7-i);
  1631  007E26  B082               	btfsc	3970,0,c	;volatile
  1632  007E28  D010               	goto	l951
  1633  007E2A  501A               	movf	readDHT@i,w,c
  1634  007E2C  0800               	sublw	0
  1635  007E2E  6E16               	movwf	??_readDHT& (0+255),c
  1636  007E30  0E07               	movlw	7
  1637  007E32  2616               	addwf	??_readDHT,f,c
  1638  007E34  0E00               	movlw	0
  1639  007E36  6E17               	movwf	(??_readDHT+1)& (0+255),c
  1640  007E38  2A16               	incf	??_readDHT,f,c
  1641  007E3A  D002               	goto	u94
  1642  007E3C                     u95:
  1643  007E3C  90D8               	bcf	status,0,c
  1644  007E3E  3617               	rlcf	??_readDHT+1,f,c
  1645  007E40                     u94:
  1646  007E40  2E16               	decfsz	??_readDHT,f,c
  1647  007E42  D7FC               	goto	u95
  1648  007E44  5017               	movf	??_readDHT+1,w,c
  1649  007E46  1618               	andwf	readDHT@dat,f,c
  1650  007E48  D01C               	goto	l963
  1651  007E4A                     l951:
  1652                           
  1653                           ;main.c: 48: else{
  1654                           ;main.c: 49: dat |= 1<<(7-i);
  1655  007E4A  501A               	movf	readDHT@i,w,c
  1656  007E4C  0800               	sublw	0
  1657  007E4E  6E16               	movwf	??_readDHT& (0+255),c
  1658  007E50  0E07               	movlw	7
  1659  007E52  2616               	addwf	??_readDHT,f,c
  1660  007E54  0E01               	movlw	1
  1661  007E56  6E17               	movwf	(??_readDHT+1)& (0+255),c
  1662  007E58  2A16               	incf	??_readDHT,f,c
  1663  007E5A  D002               	goto	u104
  1664  007E5C                     u105:
  1665  007E5C  90D8               	bcf	status,0,c
  1666  007E5E  3617               	rlcf	??_readDHT+1,f,c
  1667  007E60                     u104:
  1668  007E60  2E16               	decfsz	??_readDHT,f,c
  1669  007E62  D7FC               	goto	u105
  1670  007E64  5017               	movf	??_readDHT+1,w,c
  1671  007E66  1218               	iorwf	readDHT@dat,f,c
  1672                           
  1673                           ;main.c: 50: while(PORTCbits.RC0){
  1674  007E68  D00A               	goto	l41
  1675  007E6A                     l953:
  1676                           
  1677                           ;main.c: 51: k++;
  1678  007E6A  2A19               	incf	readDHT@k,f,c
  1679                           
  1680                           ;main.c: 52: if(k>100){
  1681  007E6C  0E64               	movlw	100
  1682  007E6E  6419               	cpfsgt	readDHT@k,c
  1683  007E70  D004               	goto	l43
  1684                           
  1685                           ;main.c: 53: time_out = 0;
  1686  007E72  0E00               	movlw	0
  1687  007E74  6E03               	movwf	_time_out,c
  1688                           
  1689                           ;main.c: 54: return 0;
  1690  007E76  0E00               	movlw	0
  1691  007E78  0012               	return	
  1692  007E7A                     l43:
  1693                           
  1694                           ;main.c: 55: }
  1695                           ;main.c: 56: _delay((unsigned long)((1)*(16000000/4000000.0)));
  1696  007E7A  D000               	nop2		;2 cycle nop
  1697  007E7C  D000               	nop2		;2 cycle nop
  1698  007E7E                     l41:
  1699  007E7E  B082               	btfsc	3970,0,c	;volatile
  1700  007E80  D7F4               	goto	l953
  1701  007E82                     l963:
  1702  007E82  2A1A               	incf	readDHT@i,f,c
  1703  007E84  D7BA               	goto	l929
  1704  007E86                     l967:
  1705                           
  1706                           ;main.c: 57: }
  1707                           ;main.c: 58: }
  1708                           ;main.c: 59: }
  1709                           ;main.c: 60: return dat;
  1710  007E86  5018               	movf	readDHT@dat,w,c
  1711  007E88  0012               	return	
  1712  007E8A                     __end_of_readDHT:
  1713                           	opt stack 0
  1714                           tblptru	equ	0xFF8
  1715                           intcon	equ	0xFF2
  1716                           intcon2	equ	0xFF1
  1717                           intcon3	equ	0xFF0
  1718                           postinc0	equ	0xFEE
  1719                           wreg	equ	0xFE8
  1720                           indf2	equ	0xFDF
  1721                           fsr2h	equ	0xFDA
  1722                           fsr2l	equ	0xFD9
  1723                           status	equ	0xFD8
  1724                           
  1725 ;; *************** function _beginDHT *****************
  1726 ;; Defined at:
  1727 ;;		line 63 in file "main.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      unsigned char 
  1734 ;; Registers used:
  1735 ;;		wreg
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1741 ;;      Params:         0       0       0       0       0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1743 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1744 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1745 ;;Total ram usage:        1 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_DHTHandler
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text14
  1755  007C70                     __ptext14:
  1756                           	opt stack 0
  1757  007C70                     _beginDHT:
  1758                           	opt stack 29
  1759                           
  1760                           ;main.c: 64: TRISCbits.TRISC0 = 0;
  1761                           
  1762                           ;incstack = 0
  1763  007C70  9094               	bcf	3988,0,c	;volatile
  1764                           
  1765                           ;main.c: 65: PORTCbits.RC0 &= 0;
  1766  007C72  9082               	bcf	3970,0,c	;volatile
  1767                           
  1768                           ;main.c: 66: _delay((unsigned long)((25)*(16000000/4000.0)));
  1769  007C74  0E82               	movlw	130
  1770  007C76  6E16               	movwf	??_beginDHT& (0+255),c
  1771  007C78  0EDE               	movlw	222
  1772  007C7A                     u507:
  1773  007C7A  2EE8               	decfsz	wreg,f,c
  1774  007C7C  D7FE               	bra	u507
  1775  007C7E  2E16               	decfsz	??_beginDHT& (0+255),f,c
  1776  007C80  D7FC               	bra	u507
  1777                           
  1778                           ;main.c: 67: PORTCbits.RC0 = 1;
  1779  007C82  8082               	bsf	3970,0,c	;volatile
  1780                           
  1781                           ;main.c: 68: _delay((unsigned long)((30)*(16000000/4000000.0)));
  1782  007C84  0E28               	movlw	40
  1783  007C86                     u517:
  1784  007C86  2EE8               	decfsz	wreg,f,c
  1785  007C88  D7FE               	bra	u517
  1786                           
  1787                           ;main.c: 69: TRISCbits.TRISC0 = 1;
  1788  007C8A  8094               	bsf	3988,0,c	;volatile
  1789                           
  1790                           ;main.c: 70: _delay((unsigned long)((40)*(16000000/4000000.0)));
  1791  007C8C  0E35               	movlw	53
  1792  007C8E                     u527:
  1793  007C8E  2EE8               	decfsz	wreg,f,c
  1794  007C90  D7FE               	bra	u527
  1795  007C92  F000               	nop	
  1796                           
  1797                           ;main.c: 71: if(!PORTCbits.RC0){
  1798  007C94  B082               	btfsc	3970,0,c	;volatile
  1799  007C96  D00C               	goto	l989
  1800                           
  1801                           ;main.c: 72: _delay((unsigned long)((80)*(16000000/4000000.0)));
  1802  007C98  0E6A               	movlw	106
  1803  007C9A                     u537:
  1804  007C9A  2EE8               	decfsz	wreg,f,c
  1805  007C9C  D7FE               	bra	u537
  1806  007C9E  D000               	nop2	
  1807                           
  1808                           ;main.c: 73: if(PORTCbits.RC0){
  1809  007CA0  A082               	btfss	3970,0,c	;volatile
  1810  007CA2  D006               	goto	l989
  1811                           
  1812                           ;main.c: 74: _delay((unsigned long)((50)*(16000000/4000000.0)));
  1813  007CA4  0E42               	movlw	66
  1814  007CA6                     u547:
  1815  007CA6  2EE8               	decfsz	wreg,f,c
  1816  007CA8  D7FE               	bra	u547
  1817  007CAA  D000               	nop2	
  1818                           
  1819                           ;main.c: 75: return 1;
  1820  007CAC  0E01               	movlw	1
  1821  007CAE  0012               	return	
  1822  007CB0                     l989:
  1823                           
  1824                           ;main.c: 76: }
  1825                           ;main.c: 77: }
  1826                           ;main.c: 78: return 0;
  1827  007CB0  0E00               	movlw	0
  1828  007CB2  0012               	return	
  1829  007CB4                     __end_of_beginDHT:
  1830                           	opt stack 0
  1831  0000                     tblptru	equ	0xFF8
  1832                           intcon	equ	0xFF2
  1833                           intcon2	equ	0xFF1
  1834                           intcon3	equ	0xFF0
  1835                           postinc0	equ	0xFEE
  1836                           wreg	equ	0xFE8
  1837                           indf2	equ	0xFDF
  1838                           fsr2h	equ	0xFDA
  1839                           fsr2l	equ	0xFD9
  1840                           status	equ	0xFD8
  1841                           tblptru	equ	0xFF8
  1842                           intcon	equ	0xFF2
  1843                           intcon2	equ	0xFF1
  1844                           intcon3	equ	0xFF0
  1845                           postinc0	equ	0xFEE
  1846                           wreg	equ	0xFE8
  1847                           indf2	equ	0xFDF
  1848                           fsr2h	equ	0xFDA
  1849                           fsr2l	equ	0xFD9
  1850                           status	equ	0xFD8
  1851                           
  1852                           	psect	rparam
  1853  0000                     tblptru	equ	0xFF8
  1854                           intcon	equ	0xFF2
  1855                           intcon2	equ	0xFF1
  1856                           intcon3	equ	0xFF0
  1857                           postinc0	equ	0xFEE
  1858                           wreg	equ	0xFE8
  1859                           indf2	equ	0xFDF
  1860                           fsr2h	equ	0xFDA
  1861                           fsr2l	equ	0xFD9
  1862                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    wl_module_send@value	PTR unsigned char  size(2) Largest target is 16
		 -> payload(COMRAM[16]), 

    wl_module_write_register@value	PTR unsigned char  size(2) Largest target is 5
		 -> wl_module_set_rx_pw@payloadwidth(COMRAM[1]), wl_module_power_down@config(COMRAM[1]), wl_module_set_as_tx@config(COMRAM[1]), wl_module_tx_config@tx_addr(COMRAM[5]), 
		 -> wl_module_rx_config@data(COMRAM[5]), 

    wl_module_set_TADDR@adr	PTR unsigned char  size(2) Largest target is 5
		 -> wl_module_tx_config@tx_addr(COMRAM[5]), 

    wl_module_set_RADDR@adr	PTR unsigned char  size(2) Largest target is 5
		 -> wl_module_tx_config@tx_addr(COMRAM[5]), 

    spi_transmit_sync@data	PTR unsigned char  size(2) Largest target is 16
		 -> wl_module_set_rx_pw@payloadwidth(COMRAM[1]), wl_module_power_down@config(COMRAM[1]), wl_module_set_as_tx@config(COMRAM[1]), wl_module_tx_config@tx_addr(COMRAM[5]), 
		 -> wl_module_rx_config@data(COMRAM[5]), payload(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _wl_module_send->_spi_transmit_sync
    _Init->_wl_module_tx_config
    _wl_module_tx_config->_wl_module_set_RADDR
    _wl_module_tx_config->_wl_module_set_TADDR
    _wl_module_set_TADDR->_wl_module_write_register
    _wl_module_set_RADDR->_wl_module_write_register
    _wl_module_write_register->_spi_transmit_sync
    _wl_module_config_register->_spi_fast_shift
    _DHTHandler->_readDHT

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8929
                                             17 COMRAM     2     2      0
                         _DHTHandler
                               _Init
                     _wl_module_send
 ---------------------------------------------------------------------------------
 (1) _wl_module_send                                       3     0      3    2217
                                              5 COMRAM     3     0      3
                     _spi_fast_shift
                  _spi_transmit_sync
          _wl_module_config_register
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0    6472
                     _wl_module_init
                _wl_module_tx_config
 ---------------------------------------------------------------------------------
 (2) _wl_module_tx_config                                  6     6      0    6472
                                             11 COMRAM     6     6      0
          _wl_module_config_register
                _wl_module_set_RADDR
                _wl_module_set_TADDR
 ---------------------------------------------------------------------------------
 (3) _wl_module_set_TADDR                                  2     0      2    1974
                                              9 COMRAM     2     0      2
           _wl_module_write_register
 ---------------------------------------------------------------------------------
 (3) _wl_module_set_RADDR                                  2     0      2    1974
                                              9 COMRAM     2     0      2
           _wl_module_write_register
 ---------------------------------------------------------------------------------
 (4) _wl_module_write_register                             4     1      3    1496
                                              5 COMRAM     4     1      3
                     _spi_fast_shift
                  _spi_transmit_sync
 ---------------------------------------------------------------------------------
 (2) _spi_transmit_sync                                    5     1      4     351
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _wl_module_config_register                            2     1      1    1655
                                              1 COMRAM     2     1      1
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (3) _spi_fast_shift                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _wl_module_init                                       0     0      0       0
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHTHandler                                           7     7      0     240
                                              5 COMRAM     7     7      0
                           _beginDHT
                            _readDHT
 ---------------------------------------------------------------------------------
 (2) _readDHT                                              5     5      0     105
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _beginDHT                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHTHandler
     _beginDHT
     _readDHT
   _Init
     _wl_module_init
       _spi_init
     _wl_module_tx_config
       _wl_module_config_register
         _spi_fast_shift
       _wl_module_set_RADDR
         _wl_module_write_register
           _spi_fast_shift
           _spi_transmit_sync
       _wl_module_set_TADDR
         _wl_module_write_register
           _spi_fast_shift
           _spi_transmit_sync
   _wl_module_send
     _spi_fast_shift
     _spi_transmit_sync
     _wl_module_config_register
       _spi_fast_shift

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      28       1       42.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      20        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Jun 13 19:40:13 2017

                       _SSPSTATbits 000FC7                                  l41 7E7E  
                                l43 7E7A                                  l35 7E1C  
                                l37 7E18                                  l64 7D02  
                                l96 7C52                                  u94 7E40  
                                u95 7E3C                         __CFG_BOR$ON 000000  
                       __CFG_BORV$3 000000                        __CFG_CP0$OFF 000000  
                      __CFG_CP1$OFF 000000                        __CFG_CP2$OFF 000000  
                      __CFG_CP3$OFF 000000                         __CFG_LVP$ON 000000  
                               l112 7B78                                 l933 7E02  
                               l951 7E4A                                 l935 7E08  
                               l927 7DF6                                 l953 7E6A  
                               l929 7DFA                                 l963 7E82  
                               l967 7E86                                 l989 7CB0  
                      __CFG_CPB$OFF 000000                                 u104 7E60  
                               u105 7E5C                        __CFG_CPD$OFF 000000  
                               u507 7C7A                                 u517 7C86  
                               u527 7C8E                                 u537 7C9A  
                               u547 7CA6                                 u477 7D52  
                               u487 7CF4                                 u497 7E22  
                               _PTX 0001                                 _res 0004  
                               wreg 000FE8                        __CFG_FOSC$HS 000000  
       __end_of_wl_module_set_RADDR 7C04         __end_of_wl_module_set_TADDR 7BAA  
                      __CFG_WDT$OFF 000000                                l1063 7D9C  
                              l1049 7D74                                l1401 7FF0  
                              l1067 7DC6                                l1333 7C66  
                              l1079 7DE2                                l1329 7C46  
                              l1361 7EB6                                l1417 7CB4  
                              l1451 7D24                                l1373 7F12  
                              l1391 7F9C                                l1367 7EE4  
                              l1455 7D30                                l1463 7D48  
                              l1385 7F6E                                l1379 7F40  
                              l1459 7D3C                                l1399 7FCA  
                              _Init 7BAA                      _wl_module_init 7B82  
                    _wl_module_send 7CB4                                _main 7CFE  
                              _temp 0002                                fsr2h 000FDA  
                              indf2 000FDF                                fsr2l 000FD9  
                              start 0000                       __CFG_IESO$OFF 000000  
                     __CFG_MCLRE$ON 000000                        ___param_bank 000000  
       __end_of_wl_module_tx_config 8000           _wl_module_config_register 7BD4  
                     __CFG_PLLDIV$4 000000                               ?_Init 0016  
                    __CFG_CCP2MX$ON 000000                               ?_main 0016  
               __size_of_DHTHandler 0086                               _PORTB 000F81  
                     __CFG_USBDIV$1 000000                               _TRISB 000F93  
                     __CFG_PWRT$OFF 000000                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                      __CFG_EBTR3$OFF 000000  
                     __CFG_WRTB$OFF 000000                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000                      __CFG_EBTRB$OFF 000000  
                   __end_of_readDHT 7E8A                               _humid 0005  
            __end_of_wl_module_init 7B96              __end_of_wl_module_send 7CFE  
                             status 000FD8                      __CFG_ICPRT$OFF 000000  
  __end_of_wl_module_write_register 7C44                   wl_module_send@len 001D  
                   __initialization 7BBE                        __end_of_Init 7BBE  
                      __end_of_main 7D62                              ??_Init 0027  
                            ??_main 0027                       __activetblptr 000002  
           spi_transmit_sync@length 0018                  spi_fast_shift@data 0016  
                  ??_spi_fast_shift 0016                     ?_wl_module_init 0016  
                   ?_wl_module_send 001B                    __end_of_beginDHT 7CB4  
                            _SSPBUF 000FC9                      __CFG_XINST$OFF 000000  
            wl_module_set_RADDR@adr 001F              wl_module_set_TADDR@adr 001F  
                    __CFG_STVREN$ON 000000                              clear_0 7BC4  
                         ??_readDHT 0016                              tblptru 000FF8  
                  __end_of_spi_init 7C20                        ??_DHTHandler 001B  
                        __accesstop 0060             __end_of__initialization 7BCA  
                   __CFG_PBADEN$OFF 000000                       ___rparam_used 000001  
                    __pcstackCOMRAM 0016               spi_transmit_sync@data 0016  
                __end_of_DHTHandler 7DE8   __size_of_wl_module_write_register 0024  
         ?_wl_module_write_register 001B  __size_of_wl_module_config_register 0018  
                         ?_beginDHT 0016   __end_of_wl_module_config_register 7BEC  
                   __CFG_VREGEN$OFF 000000        __size_of_wl_module_set_RADDR 0018  
      __size_of_wl_module_set_TADDR 0014                             __Hparam 0000  
                           __Lparam 0000                           ?_spi_init 0016  
                           __pcinit 7BBE                             __ramtop 0800  
                           __ptext0 7CFE                             __ptext1 7CB4  
                           __ptext2 7BAA                             __ptext3 7E8A  
                           __ptext4 7B96                             __ptext5 7BEC  
                           __ptext6 7C20                             __ptext7 7C44  
                           __ptext8 7BD4                             __ptext9 7B72  
                        ??_beginDHT 0016                             _readDHT 7DE8  
                  ??_wl_module_init 0016        __size_of_wl_module_tx_config 0176  
                  ??_wl_module_send 001E                             _payload 0006  
              end_of_initialization 7BCA                       __Lmediumconst 0000  
                        ??_spi_init 0016                             postinc0 000FEE  
          wl_module_tx_config@tx_nr 0021                           _PORTCbits 000F82  
      wl_module_config_register@reg 0018         wl_module_write_register@len 001D  
       wl_module_write_register@reg 001E                           _TRISAbits 000F92  
                         _TRISBbits 000F93                           _TRISCbits 000F94  
               wl_module_send@value 001B                          readDHT@dat 0018  
               start_initialization 7BBE             __size_of_spi_fast_shift 0010  
                  __CFG_LPT1OSC$OFF 000000                 _wl_module_set_RADDR 7BEC  
               _wl_module_set_TADDR 7B96                         __pbssCOMRAM 0001  
                 _spi_transmit_sync 7C44                   __size_of_beginDHT 0044  
                ?_spi_transmit_sync 0016                spi_transmit_sync@tmp 001A  
                DHTHandler@checkSum 001D                ?_wl_module_set_RADDR 001F  
              ?_wl_module_set_TADDR 001F                 ??_spi_transmit_sync 001A  
               _wl_module_tx_config 7E8A          wl_module_tx_config@tx_addr 0022  
                DHTHandler@rh_byte1 0020                  DHTHandler@rh_byte2 0021  
                 __size_of_spi_init 001C            _wl_module_write_register 7C20  
         __end_of_spi_transmit_sync 7C70                            ?_readDHT 0016  
              ?_wl_module_tx_config 0016          ?_wl_module_config_register 0017  
             ??_wl_module_set_RADDR 0021               ??_wl_module_set_TADDR 0021  
                          _LATDbits 000F8C      wl_module_config_register@value 0017  
                          _PIR1bits 000F9E                    __CFG_WDTPS$32768 000000  
     wl_module_write_register@value 001B               ??_wl_module_tx_config 0021  
                       _INTCON2bits 000FF1                         _INTCON3bits 000FF0  
                          __Hrparam 0000                      _spi_fast_shift 7B72  
                          __Lrparam 0000          __size_of_spi_transmit_sync 002C  
                          _beginDHT 7C70                    __size_of_readDHT 00A2  
                          __ptext10 7B82                            __ptext11 7C04  
                          __ptext12 7D62                            __ptext13 7DE8  
                          __ptext14 7C70                   DHTHandler@t_byte1 001E  
                 DHTHandler@t_byte2 001F                       __size_of_Init 0014  
                        _DHTHandler 7D62             __size_of_wl_module_init 0014  
                     __size_of_main 0064             __size_of_wl_module_send 004A  
            __end_of_spi_fast_shift 7B82                            _time_out 0003  
                          _spi_init 7C04               __CFG_CPUDIV$OSC1_PLL2 000000  
                          readDHT@i 001A                            readDHT@k 0019  
                        _INTCONbits 000FF2                     ?_spi_fast_shift 0016  
        ??_wl_module_write_register 001E                         _SSPCON1bits 000FC6  
       ??_wl_module_config_register 0018                         ?_DHTHandler 0016  
